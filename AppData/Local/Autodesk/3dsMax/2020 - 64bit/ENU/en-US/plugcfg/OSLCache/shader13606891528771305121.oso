OpenShadingLanguage 1.00
# Compiled by oslc 1.10.2
# options: -IC:/Program Files/Autodesk/3ds Max 2020/OSL/
shader SimpleTiles	%meta{string,help,"<font size=+1><b>Simple Tiles</b></font><br>Allows various kinds of Tiling.<br>The Tiling Offset modifies the base parameter of the tiling layout, and can generate different effects. "} %meta{string,label,"Simple Tiles"} 
param	point	UVW	0 0 0		%read{4,4} %write{0,0} %initexpr
param	float	Scale	1		%meta{float,min,1e-06} %meta{float,max,1000000}  %read{5,5} %write{2147483647,-1}
param	int	TileMode	0		%meta{string,widget,"mapper"} %meta{string,label,"Tiling Mode"} %meta{string,options,"Checker Tiles:1|Running/Stack Bond:0|English Bond:2|Fine Running/Stack Bond:3|Twist Box:4"} %meta{string,help,"Choose the kind of tile pattern to use. The 'TilingOffset' parameter adjusts the appearance of the tiles."}  %read{23,1514} %write{2147483647,-1}
param	float	U_Count	2		%meta{string,label,"Tiles in U"} %meta{float,min,1e-06} %meta{float,max,1000000}  %read{2,2} %write{2147483647,-1}
param	float	V_Count	2		%meta{string,label,"Tiles in V"} %meta{float,min,1e-06} %meta{float,max,1000000}  %read{2,2} %write{2147483647,-1}
param	float	TilingOffset	0.5		%meta{string,label,"Tiling Offset"} %meta{float,min,0} %meta{float,max,1} %meta{string,help,"An adjustable parameter which changes the appearance of the tiling. Does different things for different Tiling Modes"}  %read{6,6} %write{2147483647,-1}
param	float	GapWidth	0.1		%meta{string,label,"Gap Width"} %meta{string,help,"The width of the gap between tiles"} %meta{float,min,0} %meta{float,max,10}  %read{31,1948} %write{2147483647,-1}
param	float	Radius	0.2		%meta{string,label,"Corner Roundness"} %meta{string,help,"Adds fillet radius to the corner of the tiles"} %meta{float,min,0} %meta{float,max,10}  %read{8,8} %write{2147483647,-1}
param	float	Edge	0.1		%meta{string,label,"Edge Width (for Bump)"} %meta{string,help,"The width of a (slightly beveled) fake 'Edge' to give the tile a more realistic appearance"} %meta{float,min,0} %meta{float,max,10}  %read{32,1949} %write{2147483647,-1}
param	float	EdgeBump	1		%meta{float,min,-10} %meta{float,max,10} %meta{string,help,"The amount of Edge bump effect"}  %read{2071,2071} %write{2147483647,-1}
param	float	ColorBump	0		%meta{float,min,-10} %meta{float,max,10} %meta{string,help,"Adds some contribution of the color settings to the Bump output"}  %read{2074,2074} %write{2147483647,-1}
param	color	GapColor	0.2 0.2 0.2		%meta{string,label,"Gap Color"} %meta{string,help,"The color of the gap between tiles"}  %read{3,3} %write{2147483647,-1}
param	color	TileColor1	0.40000001 0.40000001 0.40000001		%meta{string,label,"Tile Color 1"} %meta{string,help,"First Tile Color"}  %read{2064,2064} %write{2147483647,-1}
param	color	TileColor2	0.5 0.5 0.5		%meta{string,label,"Tile Color 2"} %meta{string,help,"Second Tile Color"}  %read{2067,2067} %write{2147483647,-1}
param	color	TileColor3	0.60000002 0.60000002 0.60000002		%meta{string,label,"Tile Color 3"} %meta{string,help,"Third Tile Color. Not all Tiling Modes use this."}  %read{2070,2070} %write{2147483647,-1}
oparam	color	Col	0 0 0		%read{2073,2073} %write{3,2070}
oparam	float	Bump	0		%read{13,2075} %write{13,2075}
oparam	int	Tile	0		%read{13,2068} %write{13,2061}
oparam	int	TileIdx	0		%read{2147483647,-1} %write{13,2061}
oparam	int	Index	0		%read{2147483647,-1} %write{13,2061}
global	float	u	%read{0,0} %write{2147483647,-1}
global	float	v	%read{0,0} %write{2147483647,-1}
local	float	___321_x	%read{13,2061} %write{13,2061}
local	float	___321_y	%read{13,2061} %write{13,2061}
local	float	___321_lox	%read{13,2061} %write{13,2061}
local	float	___321_hix	%read{13,2061} %write{13,2061}
local	float	___321_loy	%read{13,2061} %write{13,2061}
local	float	___321_hiy	%read{13,2061} %write{13,2061}
local	float	___321_gwr	%read{13,2061} %write{13,2061}
local	float	___321_lx	%read{13,2061} %write{13,2061}
local	float	___321_ly	%read{13,2061} %write{13,2061}
local	float	___321_hx	%read{13,2061} %write{13,2061}
local	float	___321_hy	%read{13,2061} %write{13,2061}
local	vector	___321_dp	%read{13,2061} %write{13,2061}
local	float	___321_d	%read{13,2061} %write{13,2061}
local	float	___322_lx	%read{13,2061} %write{13,2061}
local	float	___322_ly	%read{13,2061} %write{13,2061}
local	float	___322_hx	%read{13,2061} %write{13,2061}
local	float	___322_hy	%read{13,2061} %write{13,2061}
local	int	Overlap	%read{12,2061} %write{1,1}
local	vector	Tiling	%read{4,2061} %write{2,2}
local	point	uvw	%read{9,2061} %write{5,5}
local	float	to	%read{7,2061} %write{6,6}
local	float	to2	%read{13,2061} %write{7,7}
local	float	Roundness	%read{13,2061} %write{8,8}
local	point	fluvw	%read{10,2061} %write{9,9}
local	point	fruvw	%read{2147483647,-1} %write{10,10}
local	int	___323_xx	%read{13,2061} %write{12,2061}
local	int	___324_yy	%read{13,2061} %write{13,2061}
local	point	___325_lookup	%read{13,2061} %write{13,2061}
local	int	___325_HitIdx	%read{13,2061} %write{13,2061}
const	int	$const1	0		%read{22,2047} %write{2147483647,-1}
const	float	$const2	0		%read{0,2052} %write{2147483647,-1}
const	int	$const3	1		%read{1,2062} %write{2147483647,-1}
temp	point	$tmp1	%read{5,5} %write{4,4}
const	float	$const4	0.5		%read{7,1409} %write{2147483647,-1}
const	float	$const5	10		%read{8,8} %write{2147483647,-1}
temp	int	$tmp2	%read{11,2061} %write{12,2061}
temp	int	$tmp3	%read{13,2061} %write{13,2061}
temp	vector	$tmp4	%read{13,2061} %write{13,2061}
temp	point	$tmp5	%read{13,2061} %write{13,2061}
temp	float	$tmp6	%read{13,2061} %write{13,2061}
temp	float	$tmp7	%read{13,2061} %write{13,2061}
temp	int	$tmp8	%read{13,2061} %write{13,2061}
temp	int	$tmp9	%read{13,2061} %write{13,2061}
const	float	$const6	1		%read{43,2022} %write{2147483647,-1}
temp	point	$tmp10	%read{13,2061} %write{13,2061}
temp	float	$tmp11	%read{13,2061} %write{13,2061}
temp	float	$tmp12	%read{13,2061} %write{13,2061}
temp	point	$tmp13	%read{2147483647,-1} %write{13,2061}
const	float	$const7	0.050000001		%read{31,1948} %write{2147483647,-1}
temp	float	$tmp14	%read{13,2061} %write{13,2061}
const	float	$const8	0.1		%read{32,1949} %write{2147483647,-1}
temp	float	$tmp15	%read{13,2061} %write{13,2061}
const	string	$const9	"doRect"		%read{33,1950} %write{2147483647,-1}
temp	float	$tmp16	%read{13,2061} %write{13,2061}
temp	float	$tmp17	%read{13,2061} %write{13,2061}
temp	float	$tmp18	%read{13,2061} %write{13,2061}
temp	float	$tmp19	%read{13,2061} %write{13,2061}
temp	float	$tmp20	%read{13,2061} %write{13,2061}
temp	float	$tmp21	%read{13,2061} %write{13,2061}
temp	float	$tmp22	%read{13,2061} %write{13,2061}
temp	float	$tmp23	%read{13,2061} %write{13,2061}
temp	float	$tmp24	%read{13,2061} %write{13,2061}
temp	int	$tmp25	%read{13,2061} %write{13,2061}
temp	int	$tmp26	%read{13,2061} %write{13,2061}
temp	float	$tmp27	%read{13,2061} %write{13,2061}
temp	int	$tmp28	%read{13,2061} %write{13,2061}
temp	int	$tmp29	%read{13,2061} %write{13,2061}
temp	int	$tmp30	%read{13,2061} %write{13,2061}
temp	float	$tmp31	%read{13,2061} %write{13,2061}
temp	int	$tmp32	%read{13,2061} %write{13,2061}
temp	int	$tmp33	%read{13,2061} %write{13,2061}
temp	int	$tmp34	%read{13,2061} %write{13,2061}
temp	float	$tmp35	%read{13,2061} %write{13,2061}
temp	int	$tmp36	%read{13,2061} %write{13,2061}
temp	int	$tmp37	%read{13,2061} %write{13,2061}
temp	float	$tmp38	%read{13,2061} %write{13,2061}
temp	float	$tmp39	%read{13,2061} %write{13,2061}
temp	float	$tmp40	%read{13,2061} %write{13,2061}
temp	float	$tmp41	%read{13,2061} %write{13,2061}
temp	float	$tmp42	%read{13,2061} %write{13,2061}
temp	int	$tmp43	%read{13,2061} %write{13,2061}
temp	int	$tmp44	%read{13,2061} %write{13,2061}
temp	float	$tmp45	%read{13,2061} %write{13,2061}
temp	int	$tmp46	%read{13,2061} %write{13,2061}
temp	int	$tmp47	%read{13,2061} %write{13,2061}
temp	int	$tmp48	%read{13,2061} %write{13,2061}
temp	int	$tmp49	%read{13,2061} %write{13,2061}
temp	float	$tmp50	%read{13,2061} %write{13,2061}
temp	float	$tmp51	%read{13,2061} %write{13,2061}
temp	float	$tmp52	%read{13,2061} %write{13,2061}
temp	float	$tmp53	%read{13,2061} %write{13,2061}
temp	float	$tmp54	%read{13,2061} %write{13,2061}
temp	float	$tmp55	%read{13,2061} %write{13,2061}
temp	float	$tmp56	%read{13,2061} %write{13,2061}
temp	float	$tmp57	%read{13,2061} %write{13,2061}
temp	float	$tmp58	%read{13,2061} %write{13,2061}
temp	float	$tmp59	%read{13,2061} %write{13,2061}
temp	float	$tmp60	%read{13,2061} %write{13,2061}
temp	float	$tmp61	%read{13,2061} %write{13,2061}
temp	float	$tmp62	%read{13,2061} %write{13,2061}
temp	float	$tmp63	%read{13,2061} %write{13,2061}
temp	float	$tmp64	%read{13,2061} %write{13,2061}
temp	float	$tmp65	%read{13,2061} %write{13,2061}
temp	int	$tmp66	%read{13,2061} %write{13,2061}
temp	float	$tmp67	%read{13,2061} %write{13,2061}
const	int	$const10	2		%read{233,2065} %write{2147483647,-1}
temp	point	$tmp68	%read{13,2061} %write{13,2061}
temp	float	$tmp69	%read{13,2061} %write{13,2061}
temp	float	$tmp70	%read{13,2061} %write{13,2061}
temp	point	$tmp71	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp72	%read{13,2061} %write{13,2061}
temp	float	$tmp73	%read{13,2061} %write{13,2061}
temp	float	$tmp74	%read{13,2061} %write{13,2061}
temp	float	$tmp75	%read{13,2061} %write{13,2061}
temp	float	$tmp76	%read{13,2061} %write{13,2061}
temp	float	$tmp77	%read{13,2061} %write{13,2061}
temp	float	$tmp78	%read{13,2061} %write{13,2061}
temp	float	$tmp79	%read{13,2061} %write{13,2061}
temp	float	$tmp80	%read{13,2061} %write{13,2061}
temp	float	$tmp81	%read{13,2061} %write{13,2061}
temp	float	$tmp82	%read{13,2061} %write{13,2061}
temp	int	$tmp83	%read{13,2061} %write{13,2061}
temp	int	$tmp84	%read{13,2061} %write{13,2061}
temp	float	$tmp85	%read{13,2061} %write{13,2061}
temp	int	$tmp86	%read{13,2061} %write{13,2061}
temp	int	$tmp87	%read{13,2061} %write{13,2061}
temp	int	$tmp88	%read{13,2061} %write{13,2061}
temp	float	$tmp89	%read{13,2061} %write{13,2061}
temp	int	$tmp90	%read{13,2061} %write{13,2061}
temp	int	$tmp91	%read{13,2061} %write{13,2061}
temp	int	$tmp92	%read{13,2061} %write{13,2061}
temp	float	$tmp93	%read{13,2061} %write{13,2061}
temp	int	$tmp94	%read{13,2061} %write{13,2061}
temp	int	$tmp95	%read{13,2061} %write{13,2061}
temp	float	$tmp96	%read{13,2061} %write{13,2061}
temp	float	$tmp97	%read{13,2061} %write{13,2061}
temp	float	$tmp98	%read{13,2061} %write{13,2061}
temp	float	$tmp99	%read{13,2061} %write{13,2061}
temp	float	$tmp100	%read{13,2061} %write{13,2061}
temp	int	$tmp101	%read{13,2061} %write{13,2061}
temp	int	$tmp102	%read{13,2061} %write{13,2061}
temp	float	$tmp103	%read{13,2061} %write{13,2061}
temp	int	$tmp104	%read{13,2061} %write{13,2061}
temp	int	$tmp105	%read{13,2061} %write{13,2061}
temp	int	$tmp106	%read{13,2061} %write{13,2061}
temp	int	$tmp107	%read{13,2061} %write{13,2061}
temp	float	$tmp108	%read{13,2061} %write{13,2061}
temp	float	$tmp109	%read{13,2061} %write{13,2061}
temp	float	$tmp110	%read{13,2061} %write{13,2061}
temp	float	$tmp111	%read{13,2061} %write{13,2061}
temp	float	$tmp112	%read{13,2061} %write{13,2061}
temp	float	$tmp113	%read{13,2061} %write{13,2061}
temp	float	$tmp114	%read{13,2061} %write{13,2061}
temp	float	$tmp115	%read{13,2061} %write{13,2061}
temp	float	$tmp116	%read{13,2061} %write{13,2061}
temp	float	$tmp117	%read{13,2061} %write{13,2061}
temp	float	$tmp118	%read{13,2061} %write{13,2061}
temp	float	$tmp119	%read{13,2061} %write{13,2061}
temp	float	$tmp120	%read{13,2061} %write{13,2061}
temp	float	$tmp121	%read{13,2061} %write{13,2061}
temp	float	$tmp122	%read{13,2061} %write{13,2061}
temp	float	$tmp123	%read{13,2061} %write{13,2061}
temp	int	$tmp124	%read{13,2061} %write{13,2061}
temp	int	$tmp125	%read{13,2061} %write{13,2061}
temp	point	$tmp126	%read{13,2061} %write{13,2061}
temp	float	$tmp127	%read{13,2061} %write{13,2061}
temp	float	$tmp128	%read{13,2061} %write{13,2061}
temp	point	$tmp129	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp130	%read{13,2061} %write{13,2061}
temp	float	$tmp131	%read{13,2061} %write{13,2061}
temp	float	$tmp132	%read{13,2061} %write{13,2061}
temp	float	$tmp133	%read{13,2061} %write{13,2061}
temp	float	$tmp134	%read{13,2061} %write{13,2061}
temp	float	$tmp135	%read{13,2061} %write{13,2061}
temp	float	$tmp136	%read{13,2061} %write{13,2061}
temp	float	$tmp137	%read{13,2061} %write{13,2061}
temp	float	$tmp138	%read{13,2061} %write{13,2061}
temp	float	$tmp139	%read{13,2061} %write{13,2061}
temp	float	$tmp140	%read{13,2061} %write{13,2061}
temp	int	$tmp141	%read{13,2061} %write{13,2061}
temp	int	$tmp142	%read{13,2061} %write{13,2061}
temp	float	$tmp143	%read{13,2061} %write{13,2061}
temp	int	$tmp144	%read{13,2061} %write{13,2061}
temp	int	$tmp145	%read{13,2061} %write{13,2061}
temp	int	$tmp146	%read{13,2061} %write{13,2061}
temp	float	$tmp147	%read{13,2061} %write{13,2061}
temp	int	$tmp148	%read{13,2061} %write{13,2061}
temp	int	$tmp149	%read{13,2061} %write{13,2061}
temp	int	$tmp150	%read{13,2061} %write{13,2061}
temp	float	$tmp151	%read{13,2061} %write{13,2061}
temp	int	$tmp152	%read{13,2061} %write{13,2061}
temp	int	$tmp153	%read{13,2061} %write{13,2061}
temp	float	$tmp154	%read{13,2061} %write{13,2061}
temp	float	$tmp155	%read{13,2061} %write{13,2061}
temp	float	$tmp156	%read{13,2061} %write{13,2061}
temp	float	$tmp157	%read{13,2061} %write{13,2061}
temp	float	$tmp158	%read{13,2061} %write{13,2061}
temp	int	$tmp159	%read{13,2061} %write{13,2061}
temp	int	$tmp160	%read{13,2061} %write{13,2061}
temp	float	$tmp161	%read{13,2061} %write{13,2061}
temp	int	$tmp162	%read{13,2061} %write{13,2061}
temp	int	$tmp163	%read{13,2061} %write{13,2061}
temp	int	$tmp164	%read{13,2061} %write{13,2061}
temp	int	$tmp165	%read{13,2061} %write{13,2061}
temp	float	$tmp166	%read{13,2061} %write{13,2061}
temp	float	$tmp167	%read{13,2061} %write{13,2061}
temp	float	$tmp168	%read{13,2061} %write{13,2061}
temp	float	$tmp169	%read{13,2061} %write{13,2061}
temp	float	$tmp170	%read{13,2061} %write{13,2061}
temp	float	$tmp171	%read{13,2061} %write{13,2061}
temp	float	$tmp172	%read{13,2061} %write{13,2061}
temp	float	$tmp173	%read{13,2061} %write{13,2061}
temp	float	$tmp174	%read{13,2061} %write{13,2061}
temp	float	$tmp175	%read{13,2061} %write{13,2061}
temp	float	$tmp176	%read{13,2061} %write{13,2061}
temp	float	$tmp177	%read{13,2061} %write{13,2061}
temp	float	$tmp178	%read{13,2061} %write{13,2061}
temp	float	$tmp179	%read{13,2061} %write{13,2061}
temp	float	$tmp180	%read{13,2061} %write{13,2061}
temp	float	$tmp181	%read{13,2061} %write{13,2061}
temp	int	$tmp182	%read{13,2061} %write{13,2061}
temp	point	$tmp183	%read{13,2061} %write{13,2061}
temp	float	$tmp184	%read{13,2061} %write{13,2061}
temp	float	$tmp185	%read{13,2061} %write{13,2061}
temp	point	$tmp186	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp187	%read{13,2061} %write{13,2061}
temp	float	$tmp188	%read{13,2061} %write{13,2061}
temp	float	$tmp189	%read{13,2061} %write{13,2061}
temp	float	$tmp190	%read{13,2061} %write{13,2061}
temp	float	$tmp191	%read{13,2061} %write{13,2061}
temp	float	$tmp192	%read{13,2061} %write{13,2061}
temp	float	$tmp193	%read{13,2061} %write{13,2061}
temp	float	$tmp194	%read{13,2061} %write{13,2061}
temp	float	$tmp195	%read{13,2061} %write{13,2061}
temp	float	$tmp196	%read{13,2061} %write{13,2061}
temp	float	$tmp197	%read{13,2061} %write{13,2061}
temp	int	$tmp198	%read{13,2061} %write{13,2061}
temp	int	$tmp199	%read{13,2061} %write{13,2061}
temp	float	$tmp200	%read{13,2061} %write{13,2061}
temp	int	$tmp201	%read{13,2061} %write{13,2061}
temp	int	$tmp202	%read{13,2061} %write{13,2061}
temp	int	$tmp203	%read{13,2061} %write{13,2061}
temp	float	$tmp204	%read{13,2061} %write{13,2061}
temp	int	$tmp205	%read{13,2061} %write{13,2061}
temp	int	$tmp206	%read{13,2061} %write{13,2061}
temp	int	$tmp207	%read{13,2061} %write{13,2061}
temp	float	$tmp208	%read{13,2061} %write{13,2061}
temp	int	$tmp209	%read{13,2061} %write{13,2061}
temp	int	$tmp210	%read{13,2061} %write{13,2061}
temp	float	$tmp211	%read{13,2061} %write{13,2061}
temp	float	$tmp212	%read{13,2061} %write{13,2061}
temp	float	$tmp213	%read{13,2061} %write{13,2061}
temp	float	$tmp214	%read{13,2061} %write{13,2061}
temp	float	$tmp215	%read{13,2061} %write{13,2061}
temp	int	$tmp216	%read{13,2061} %write{13,2061}
temp	int	$tmp217	%read{13,2061} %write{13,2061}
temp	float	$tmp218	%read{13,2061} %write{13,2061}
temp	int	$tmp219	%read{13,2061} %write{13,2061}
temp	int	$tmp220	%read{13,2061} %write{13,2061}
temp	int	$tmp221	%read{13,2061} %write{13,2061}
temp	int	$tmp222	%read{13,2061} %write{13,2061}
temp	float	$tmp223	%read{13,2061} %write{13,2061}
temp	float	$tmp224	%read{13,2061} %write{13,2061}
temp	float	$tmp225	%read{13,2061} %write{13,2061}
temp	float	$tmp226	%read{13,2061} %write{13,2061}
temp	float	$tmp227	%read{13,2061} %write{13,2061}
temp	float	$tmp228	%read{13,2061} %write{13,2061}
temp	float	$tmp229	%read{13,2061} %write{13,2061}
temp	float	$tmp230	%read{13,2061} %write{13,2061}
temp	float	$tmp231	%read{13,2061} %write{13,2061}
temp	float	$tmp232	%read{13,2061} %write{13,2061}
temp	float	$tmp233	%read{13,2061} %write{13,2061}
temp	float	$tmp234	%read{13,2061} %write{13,2061}
temp	float	$tmp235	%read{13,2061} %write{13,2061}
temp	float	$tmp236	%read{13,2061} %write{13,2061}
temp	float	$tmp237	%read{13,2061} %write{13,2061}
temp	float	$tmp238	%read{13,2061} %write{13,2061}
temp	int	$tmp239	%read{13,2061} %write{13,2061}
const	int	$const11	3		%read{550,2068} %write{2147483647,-1}
temp	point	$tmp240	%read{13,2061} %write{13,2061}
temp	float	$tmp241	%read{13,2061} %write{13,2061}
temp	float	$tmp242	%read{13,2061} %write{13,2061}
temp	point	$tmp243	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp244	%read{13,2061} %write{13,2061}
temp	float	$tmp245	%read{13,2061} %write{13,2061}
temp	float	$tmp246	%read{13,2061} %write{13,2061}
temp	float	$tmp247	%read{13,2061} %write{13,2061}
temp	float	$tmp248	%read{13,2061} %write{13,2061}
temp	float	$tmp249	%read{13,2061} %write{13,2061}
temp	float	$tmp250	%read{13,2061} %write{13,2061}
temp	float	$tmp251	%read{13,2061} %write{13,2061}
temp	float	$tmp252	%read{13,2061} %write{13,2061}
temp	float	$tmp253	%read{13,2061} %write{13,2061}
temp	float	$tmp254	%read{13,2061} %write{13,2061}
temp	int	$tmp255	%read{13,2061} %write{13,2061}
temp	int	$tmp256	%read{13,2061} %write{13,2061}
temp	float	$tmp257	%read{13,2061} %write{13,2061}
temp	int	$tmp258	%read{13,2061} %write{13,2061}
temp	int	$tmp259	%read{13,2061} %write{13,2061}
temp	int	$tmp260	%read{13,2061} %write{13,2061}
temp	float	$tmp261	%read{13,2061} %write{13,2061}
temp	int	$tmp262	%read{13,2061} %write{13,2061}
temp	int	$tmp263	%read{13,2061} %write{13,2061}
temp	int	$tmp264	%read{13,2061} %write{13,2061}
temp	float	$tmp265	%read{13,2061} %write{13,2061}
temp	int	$tmp266	%read{13,2061} %write{13,2061}
temp	int	$tmp267	%read{13,2061} %write{13,2061}
temp	float	$tmp268	%read{13,2061} %write{13,2061}
temp	float	$tmp269	%read{13,2061} %write{13,2061}
temp	float	$tmp270	%read{13,2061} %write{13,2061}
temp	float	$tmp271	%read{13,2061} %write{13,2061}
temp	float	$tmp272	%read{13,2061} %write{13,2061}
temp	int	$tmp273	%read{13,2061} %write{13,2061}
temp	int	$tmp274	%read{13,2061} %write{13,2061}
temp	float	$tmp275	%read{13,2061} %write{13,2061}
temp	int	$tmp276	%read{13,2061} %write{13,2061}
temp	int	$tmp277	%read{13,2061} %write{13,2061}
temp	int	$tmp278	%read{13,2061} %write{13,2061}
temp	int	$tmp279	%read{13,2061} %write{13,2061}
temp	float	$tmp280	%read{13,2061} %write{13,2061}
temp	float	$tmp281	%read{13,2061} %write{13,2061}
temp	float	$tmp282	%read{13,2061} %write{13,2061}
temp	float	$tmp283	%read{13,2061} %write{13,2061}
temp	float	$tmp284	%read{13,2061} %write{13,2061}
temp	float	$tmp285	%read{13,2061} %write{13,2061}
temp	float	$tmp286	%read{13,2061} %write{13,2061}
temp	float	$tmp287	%read{13,2061} %write{13,2061}
temp	float	$tmp288	%read{13,2061} %write{13,2061}
temp	float	$tmp289	%read{13,2061} %write{13,2061}
temp	float	$tmp290	%read{13,2061} %write{13,2061}
temp	float	$tmp291	%read{13,2061} %write{13,2061}
temp	float	$tmp292	%read{13,2061} %write{13,2061}
temp	float	$tmp293	%read{13,2061} %write{13,2061}
temp	float	$tmp294	%read{13,2061} %write{13,2061}
temp	float	$tmp295	%read{13,2061} %write{13,2061}
temp	int	$tmp296	%read{13,2061} %write{13,2061}
const	int	$const12	4		%read{655,1937} %write{2147483647,-1}
temp	point	$tmp297	%read{13,2061} %write{13,2061}
temp	float	$tmp298	%read{13,2061} %write{13,2061}
temp	float	$tmp299	%read{13,2061} %write{13,2061}
temp	point	$tmp300	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp301	%read{13,2061} %write{13,2061}
temp	float	$tmp302	%read{13,2061} %write{13,2061}
temp	float	$tmp303	%read{13,2061} %write{13,2061}
temp	float	$tmp304	%read{13,2061} %write{13,2061}
temp	float	$tmp305	%read{13,2061} %write{13,2061}
temp	float	$tmp306	%read{13,2061} %write{13,2061}
temp	float	$tmp307	%read{13,2061} %write{13,2061}
temp	float	$tmp308	%read{13,2061} %write{13,2061}
temp	float	$tmp309	%read{13,2061} %write{13,2061}
temp	float	$tmp310	%read{13,2061} %write{13,2061}
temp	float	$tmp311	%read{13,2061} %write{13,2061}
temp	int	$tmp312	%read{13,2061} %write{13,2061}
temp	int	$tmp313	%read{13,2061} %write{13,2061}
temp	float	$tmp314	%read{13,2061} %write{13,2061}
temp	int	$tmp315	%read{13,2061} %write{13,2061}
temp	int	$tmp316	%read{13,2061} %write{13,2061}
temp	int	$tmp317	%read{13,2061} %write{13,2061}
temp	float	$tmp318	%read{13,2061} %write{13,2061}
temp	int	$tmp319	%read{13,2061} %write{13,2061}
temp	int	$tmp320	%read{13,2061} %write{13,2061}
temp	int	$tmp321	%read{13,2061} %write{13,2061}
temp	float	$tmp322	%read{13,2061} %write{13,2061}
temp	int	$tmp323	%read{13,2061} %write{13,2061}
temp	int	$tmp324	%read{13,2061} %write{13,2061}
temp	float	$tmp325	%read{13,2061} %write{13,2061}
temp	float	$tmp326	%read{13,2061} %write{13,2061}
temp	float	$tmp327	%read{13,2061} %write{13,2061}
temp	float	$tmp328	%read{13,2061} %write{13,2061}
temp	float	$tmp329	%read{13,2061} %write{13,2061}
temp	int	$tmp330	%read{13,2061} %write{13,2061}
temp	int	$tmp331	%read{13,2061} %write{13,2061}
temp	float	$tmp332	%read{13,2061} %write{13,2061}
temp	int	$tmp333	%read{13,2061} %write{13,2061}
temp	int	$tmp334	%read{13,2061} %write{13,2061}
temp	int	$tmp335	%read{13,2061} %write{13,2061}
temp	int	$tmp336	%read{13,2061} %write{13,2061}
temp	float	$tmp337	%read{13,2061} %write{13,2061}
temp	float	$tmp338	%read{13,2061} %write{13,2061}
temp	float	$tmp339	%read{13,2061} %write{13,2061}
temp	float	$tmp340	%read{13,2061} %write{13,2061}
temp	float	$tmp341	%read{13,2061} %write{13,2061}
temp	float	$tmp342	%read{13,2061} %write{13,2061}
temp	float	$tmp343	%read{13,2061} %write{13,2061}
temp	float	$tmp344	%read{13,2061} %write{13,2061}
temp	float	$tmp345	%read{13,2061} %write{13,2061}
temp	float	$tmp346	%read{13,2061} %write{13,2061}
temp	float	$tmp347	%read{13,2061} %write{13,2061}
temp	float	$tmp348	%read{13,2061} %write{13,2061}
temp	float	$tmp349	%read{13,2061} %write{13,2061}
temp	float	$tmp350	%read{13,2061} %write{13,2061}
temp	float	$tmp351	%read{13,2061} %write{13,2061}
temp	float	$tmp352	%read{13,2061} %write{13,2061}
temp	int	$tmp353	%read{13,2061} %write{13,2061}
temp	int	$tmp354	%read{13,2061} %write{13,2061}
temp	point	$tmp355	%read{13,2061} %write{13,2061}
temp	float	$tmp356	%read{13,2061} %write{13,2061}
temp	float	$tmp357	%read{13,2061} %write{13,2061}
temp	point	$tmp358	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp359	%read{13,2061} %write{13,2061}
temp	float	$tmp360	%read{13,2061} %write{13,2061}
temp	float	$tmp361	%read{13,2061} %write{13,2061}
temp	float	$tmp362	%read{13,2061} %write{13,2061}
temp	float	$tmp363	%read{13,2061} %write{13,2061}
temp	float	$tmp364	%read{13,2061} %write{13,2061}
temp	float	$tmp365	%read{13,2061} %write{13,2061}
temp	float	$tmp366	%read{13,2061} %write{13,2061}
temp	float	$tmp367	%read{13,2061} %write{13,2061}
temp	float	$tmp368	%read{13,2061} %write{13,2061}
temp	float	$tmp369	%read{13,2061} %write{13,2061}
temp	int	$tmp370	%read{13,2061} %write{13,2061}
temp	int	$tmp371	%read{13,2061} %write{13,2061}
temp	float	$tmp372	%read{13,2061} %write{13,2061}
temp	int	$tmp373	%read{13,2061} %write{13,2061}
temp	int	$tmp374	%read{13,2061} %write{13,2061}
temp	int	$tmp375	%read{13,2061} %write{13,2061}
temp	float	$tmp376	%read{13,2061} %write{13,2061}
temp	int	$tmp377	%read{13,2061} %write{13,2061}
temp	int	$tmp378	%read{13,2061} %write{13,2061}
temp	int	$tmp379	%read{13,2061} %write{13,2061}
temp	float	$tmp380	%read{13,2061} %write{13,2061}
temp	int	$tmp381	%read{13,2061} %write{13,2061}
temp	int	$tmp382	%read{13,2061} %write{13,2061}
temp	float	$tmp383	%read{13,2061} %write{13,2061}
temp	float	$tmp384	%read{13,2061} %write{13,2061}
temp	float	$tmp385	%read{13,2061} %write{13,2061}
temp	float	$tmp386	%read{13,2061} %write{13,2061}
temp	float	$tmp387	%read{13,2061} %write{13,2061}
temp	int	$tmp388	%read{13,2061} %write{13,2061}
temp	int	$tmp389	%read{13,2061} %write{13,2061}
temp	float	$tmp390	%read{13,2061} %write{13,2061}
temp	int	$tmp391	%read{13,2061} %write{13,2061}
temp	int	$tmp392	%read{13,2061} %write{13,2061}
temp	int	$tmp393	%read{13,2061} %write{13,2061}
temp	int	$tmp394	%read{13,2061} %write{13,2061}
temp	float	$tmp395	%read{13,2061} %write{13,2061}
temp	float	$tmp396	%read{13,2061} %write{13,2061}
temp	float	$tmp397	%read{13,2061} %write{13,2061}
temp	float	$tmp398	%read{13,2061} %write{13,2061}
temp	float	$tmp399	%read{13,2061} %write{13,2061}
temp	float	$tmp400	%read{13,2061} %write{13,2061}
temp	float	$tmp401	%read{13,2061} %write{13,2061}
temp	float	$tmp402	%read{13,2061} %write{13,2061}
temp	float	$tmp403	%read{13,2061} %write{13,2061}
temp	float	$tmp404	%read{13,2061} %write{13,2061}
temp	float	$tmp405	%read{13,2061} %write{13,2061}
temp	float	$tmp406	%read{13,2061} %write{13,2061}
temp	float	$tmp407	%read{13,2061} %write{13,2061}
temp	float	$tmp408	%read{13,2061} %write{13,2061}
temp	float	$tmp409	%read{13,2061} %write{13,2061}
temp	float	$tmp410	%read{13,2061} %write{13,2061}
temp	int	$tmp411	%read{13,2061} %write{13,2061}
temp	float	$tmp412	%read{13,2061} %write{13,2061}
temp	float	$tmp413	%read{13,2061} %write{13,2061}
temp	point	$tmp414	%read{13,2061} %write{13,2061}
temp	float	$tmp415	%read{13,2061} %write{13,2061}
temp	float	$tmp416	%read{13,2061} %write{13,2061}
temp	point	$tmp417	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp418	%read{13,2061} %write{13,2061}
temp	float	$tmp419	%read{13,2061} %write{13,2061}
temp	float	$tmp420	%read{13,2061} %write{13,2061}
temp	float	$tmp421	%read{13,2061} %write{13,2061}
temp	float	$tmp422	%read{13,2061} %write{13,2061}
temp	float	$tmp423	%read{13,2061} %write{13,2061}
temp	float	$tmp424	%read{13,2061} %write{13,2061}
temp	float	$tmp425	%read{13,2061} %write{13,2061}
temp	float	$tmp426	%read{13,2061} %write{13,2061}
temp	float	$tmp427	%read{13,2061} %write{13,2061}
temp	float	$tmp428	%read{13,2061} %write{13,2061}
temp	int	$tmp429	%read{13,2061} %write{13,2061}
temp	int	$tmp430	%read{13,2061} %write{13,2061}
temp	float	$tmp431	%read{13,2061} %write{13,2061}
temp	int	$tmp432	%read{13,2061} %write{13,2061}
temp	int	$tmp433	%read{13,2061} %write{13,2061}
temp	int	$tmp434	%read{13,2061} %write{13,2061}
temp	float	$tmp435	%read{13,2061} %write{13,2061}
temp	int	$tmp436	%read{13,2061} %write{13,2061}
temp	int	$tmp437	%read{13,2061} %write{13,2061}
temp	int	$tmp438	%read{13,2061} %write{13,2061}
temp	float	$tmp439	%read{13,2061} %write{13,2061}
temp	int	$tmp440	%read{13,2061} %write{13,2061}
temp	int	$tmp441	%read{13,2061} %write{13,2061}
temp	float	$tmp442	%read{13,2061} %write{13,2061}
temp	float	$tmp443	%read{13,2061} %write{13,2061}
temp	float	$tmp444	%read{13,2061} %write{13,2061}
temp	float	$tmp445	%read{13,2061} %write{13,2061}
temp	float	$tmp446	%read{13,2061} %write{13,2061}
temp	int	$tmp447	%read{13,2061} %write{13,2061}
temp	int	$tmp448	%read{13,2061} %write{13,2061}
temp	float	$tmp449	%read{13,2061} %write{13,2061}
temp	int	$tmp450	%read{13,2061} %write{13,2061}
temp	int	$tmp451	%read{13,2061} %write{13,2061}
temp	int	$tmp452	%read{13,2061} %write{13,2061}
temp	int	$tmp453	%read{13,2061} %write{13,2061}
temp	float	$tmp454	%read{13,2061} %write{13,2061}
temp	float	$tmp455	%read{13,2061} %write{13,2061}
temp	float	$tmp456	%read{13,2061} %write{13,2061}
temp	float	$tmp457	%read{13,2061} %write{13,2061}
temp	float	$tmp458	%read{13,2061} %write{13,2061}
temp	float	$tmp459	%read{13,2061} %write{13,2061}
temp	float	$tmp460	%read{13,2061} %write{13,2061}
temp	float	$tmp461	%read{13,2061} %write{13,2061}
temp	float	$tmp462	%read{13,2061} %write{13,2061}
temp	float	$tmp463	%read{13,2061} %write{13,2061}
temp	float	$tmp464	%read{13,2061} %write{13,2061}
temp	float	$tmp465	%read{13,2061} %write{13,2061}
temp	float	$tmp466	%read{13,2061} %write{13,2061}
temp	float	$tmp467	%read{13,2061} %write{13,2061}
temp	float	$tmp468	%read{13,2061} %write{13,2061}
temp	float	$tmp469	%read{13,2061} %write{13,2061}
temp	int	$tmp470	%read{13,2061} %write{13,2061}
temp	float	$tmp471	%read{13,2061} %write{13,2061}
temp	float	$tmp472	%read{13,2061} %write{13,2061}
temp	point	$tmp473	%read{13,2061} %write{13,2061}
temp	float	$tmp474	%read{13,2061} %write{13,2061}
temp	float	$tmp475	%read{13,2061} %write{13,2061}
temp	point	$tmp476	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp477	%read{13,2061} %write{13,2061}
temp	float	$tmp478	%read{13,2061} %write{13,2061}
temp	float	$tmp479	%read{13,2061} %write{13,2061}
temp	float	$tmp480	%read{13,2061} %write{13,2061}
temp	float	$tmp481	%read{13,2061} %write{13,2061}
temp	float	$tmp482	%read{13,2061} %write{13,2061}
temp	float	$tmp483	%read{13,2061} %write{13,2061}
temp	float	$tmp484	%read{13,2061} %write{13,2061}
temp	float	$tmp485	%read{13,2061} %write{13,2061}
temp	float	$tmp486	%read{13,2061} %write{13,2061}
temp	float	$tmp487	%read{13,2061} %write{13,2061}
temp	int	$tmp488	%read{13,2061} %write{13,2061}
temp	int	$tmp489	%read{13,2061} %write{13,2061}
temp	float	$tmp490	%read{13,2061} %write{13,2061}
temp	int	$tmp491	%read{13,2061} %write{13,2061}
temp	int	$tmp492	%read{13,2061} %write{13,2061}
temp	int	$tmp493	%read{13,2061} %write{13,2061}
temp	float	$tmp494	%read{13,2061} %write{13,2061}
temp	int	$tmp495	%read{13,2061} %write{13,2061}
temp	int	$tmp496	%read{13,2061} %write{13,2061}
temp	int	$tmp497	%read{13,2061} %write{13,2061}
temp	float	$tmp498	%read{13,2061} %write{13,2061}
temp	int	$tmp499	%read{13,2061} %write{13,2061}
temp	int	$tmp500	%read{13,2061} %write{13,2061}
temp	float	$tmp501	%read{13,2061} %write{13,2061}
temp	float	$tmp502	%read{13,2061} %write{13,2061}
temp	float	$tmp503	%read{13,2061} %write{13,2061}
temp	float	$tmp504	%read{13,2061} %write{13,2061}
temp	float	$tmp505	%read{13,2061} %write{13,2061}
temp	int	$tmp506	%read{13,2061} %write{13,2061}
temp	int	$tmp507	%read{13,2061} %write{13,2061}
temp	float	$tmp508	%read{13,2061} %write{13,2061}
temp	int	$tmp509	%read{13,2061} %write{13,2061}
temp	int	$tmp510	%read{13,2061} %write{13,2061}
temp	int	$tmp511	%read{13,2061} %write{13,2061}
temp	int	$tmp512	%read{13,2061} %write{13,2061}
temp	float	$tmp513	%read{13,2061} %write{13,2061}
temp	float	$tmp514	%read{13,2061} %write{13,2061}
temp	float	$tmp515	%read{13,2061} %write{13,2061}
temp	float	$tmp516	%read{13,2061} %write{13,2061}
temp	float	$tmp517	%read{13,2061} %write{13,2061}
temp	float	$tmp518	%read{13,2061} %write{13,2061}
temp	float	$tmp519	%read{13,2061} %write{13,2061}
temp	float	$tmp520	%read{13,2061} %write{13,2061}
temp	float	$tmp521	%read{13,2061} %write{13,2061}
temp	float	$tmp522	%read{13,2061} %write{13,2061}
temp	float	$tmp523	%read{13,2061} %write{13,2061}
temp	float	$tmp524	%read{13,2061} %write{13,2061}
temp	float	$tmp525	%read{13,2061} %write{13,2061}
temp	float	$tmp526	%read{13,2061} %write{13,2061}
temp	float	$tmp527	%read{13,2061} %write{13,2061}
temp	float	$tmp528	%read{13,2061} %write{13,2061}
temp	int	$tmp529	%read{13,2061} %write{13,2061}
temp	int	$tmp530	%read{13,2061} %write{13,2061}
temp	point	$tmp531	%read{13,2061} %write{13,2061}
temp	float	$tmp532	%read{13,2061} %write{13,2061}
temp	float	$tmp533	%read{13,2061} %write{13,2061}
temp	point	$tmp534	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp535	%read{13,2061} %write{13,2061}
temp	float	$tmp536	%read{13,2061} %write{13,2061}
temp	float	$tmp537	%read{13,2061} %write{13,2061}
temp	float	$tmp538	%read{13,2061} %write{13,2061}
temp	float	$tmp539	%read{13,2061} %write{13,2061}
temp	float	$tmp540	%read{13,2061} %write{13,2061}
temp	float	$tmp541	%read{13,2061} %write{13,2061}
temp	float	$tmp542	%read{13,2061} %write{13,2061}
temp	float	$tmp543	%read{13,2061} %write{13,2061}
temp	float	$tmp544	%read{13,2061} %write{13,2061}
temp	float	$tmp545	%read{13,2061} %write{13,2061}
temp	int	$tmp546	%read{13,2061} %write{13,2061}
temp	int	$tmp547	%read{13,2061} %write{13,2061}
temp	float	$tmp548	%read{13,2061} %write{13,2061}
temp	int	$tmp549	%read{13,2061} %write{13,2061}
temp	int	$tmp550	%read{13,2061} %write{13,2061}
temp	int	$tmp551	%read{13,2061} %write{13,2061}
temp	float	$tmp552	%read{13,2061} %write{13,2061}
temp	int	$tmp553	%read{13,2061} %write{13,2061}
temp	int	$tmp554	%read{13,2061} %write{13,2061}
temp	int	$tmp555	%read{13,2061} %write{13,2061}
temp	float	$tmp556	%read{13,2061} %write{13,2061}
temp	int	$tmp557	%read{13,2061} %write{13,2061}
temp	int	$tmp558	%read{13,2061} %write{13,2061}
temp	float	$tmp559	%read{13,2061} %write{13,2061}
temp	float	$tmp560	%read{13,2061} %write{13,2061}
temp	float	$tmp561	%read{13,2061} %write{13,2061}
temp	float	$tmp562	%read{13,2061} %write{13,2061}
temp	float	$tmp563	%read{13,2061} %write{13,2061}
temp	int	$tmp564	%read{13,2061} %write{13,2061}
temp	int	$tmp565	%read{13,2061} %write{13,2061}
temp	float	$tmp566	%read{13,2061} %write{13,2061}
temp	int	$tmp567	%read{13,2061} %write{13,2061}
temp	int	$tmp568	%read{13,2061} %write{13,2061}
temp	int	$tmp569	%read{13,2061} %write{13,2061}
temp	int	$tmp570	%read{13,2061} %write{13,2061}
temp	float	$tmp571	%read{13,2061} %write{13,2061}
temp	float	$tmp572	%read{13,2061} %write{13,2061}
temp	float	$tmp573	%read{13,2061} %write{13,2061}
temp	float	$tmp574	%read{13,2061} %write{13,2061}
temp	float	$tmp575	%read{13,2061} %write{13,2061}
temp	float	$tmp576	%read{13,2061} %write{13,2061}
temp	float	$tmp577	%read{13,2061} %write{13,2061}
temp	float	$tmp578	%read{13,2061} %write{13,2061}
temp	float	$tmp579	%read{13,2061} %write{13,2061}
temp	float	$tmp580	%read{13,2061} %write{13,2061}
temp	float	$tmp581	%read{13,2061} %write{13,2061}
temp	float	$tmp582	%read{13,2061} %write{13,2061}
temp	float	$tmp583	%read{13,2061} %write{13,2061}
temp	float	$tmp584	%read{13,2061} %write{13,2061}
temp	float	$tmp585	%read{13,2061} %write{13,2061}
temp	float	$tmp586	%read{13,2061} %write{13,2061}
temp	int	$tmp587	%read{13,2061} %write{13,2061}
temp	float	$tmp588	%read{13,2061} %write{13,2061}
temp	float	$tmp589	%read{13,2061} %write{13,2061}
const	float	$const13	0.75		%read{1110,1429} %write{2147483647,-1}
temp	point	$tmp590	%read{13,2061} %write{13,2061}
temp	float	$tmp591	%read{13,2061} %write{13,2061}
temp	float	$tmp592	%read{13,2061} %write{13,2061}
temp	point	$tmp593	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp594	%read{13,2061} %write{13,2061}
temp	float	$tmp595	%read{13,2061} %write{13,2061}
temp	float	$tmp596	%read{13,2061} %write{13,2061}
temp	float	$tmp597	%read{13,2061} %write{13,2061}
temp	float	$tmp598	%read{13,2061} %write{13,2061}
temp	float	$tmp599	%read{13,2061} %write{13,2061}
temp	float	$tmp600	%read{13,2061} %write{13,2061}
temp	float	$tmp601	%read{13,2061} %write{13,2061}
temp	float	$tmp602	%read{13,2061} %write{13,2061}
temp	float	$tmp603	%read{13,2061} %write{13,2061}
temp	float	$tmp604	%read{13,2061} %write{13,2061}
temp	int	$tmp605	%read{13,2061} %write{13,2061}
temp	int	$tmp606	%read{13,2061} %write{13,2061}
temp	float	$tmp607	%read{13,2061} %write{13,2061}
temp	int	$tmp608	%read{13,2061} %write{13,2061}
temp	int	$tmp609	%read{13,2061} %write{13,2061}
temp	int	$tmp610	%read{13,2061} %write{13,2061}
temp	float	$tmp611	%read{13,2061} %write{13,2061}
temp	int	$tmp612	%read{13,2061} %write{13,2061}
temp	int	$tmp613	%read{13,2061} %write{13,2061}
temp	int	$tmp614	%read{13,2061} %write{13,2061}
temp	float	$tmp615	%read{13,2061} %write{13,2061}
temp	int	$tmp616	%read{13,2061} %write{13,2061}
temp	int	$tmp617	%read{13,2061} %write{13,2061}
temp	float	$tmp618	%read{13,2061} %write{13,2061}
temp	float	$tmp619	%read{13,2061} %write{13,2061}
temp	float	$tmp620	%read{13,2061} %write{13,2061}
temp	float	$tmp621	%read{13,2061} %write{13,2061}
temp	float	$tmp622	%read{13,2061} %write{13,2061}
temp	int	$tmp623	%read{13,2061} %write{13,2061}
temp	int	$tmp624	%read{13,2061} %write{13,2061}
temp	float	$tmp625	%read{13,2061} %write{13,2061}
temp	int	$tmp626	%read{13,2061} %write{13,2061}
temp	int	$tmp627	%read{13,2061} %write{13,2061}
temp	int	$tmp628	%read{13,2061} %write{13,2061}
temp	int	$tmp629	%read{13,2061} %write{13,2061}
temp	float	$tmp630	%read{13,2061} %write{13,2061}
temp	float	$tmp631	%read{13,2061} %write{13,2061}
temp	float	$tmp632	%read{13,2061} %write{13,2061}
temp	float	$tmp633	%read{13,2061} %write{13,2061}
temp	float	$tmp634	%read{13,2061} %write{13,2061}
temp	float	$tmp635	%read{13,2061} %write{13,2061}
temp	float	$tmp636	%read{13,2061} %write{13,2061}
temp	float	$tmp637	%read{13,2061} %write{13,2061}
temp	float	$tmp638	%read{13,2061} %write{13,2061}
temp	float	$tmp639	%read{13,2061} %write{13,2061}
temp	float	$tmp640	%read{13,2061} %write{13,2061}
temp	float	$tmp641	%read{13,2061} %write{13,2061}
temp	float	$tmp642	%read{13,2061} %write{13,2061}
temp	float	$tmp643	%read{13,2061} %write{13,2061}
temp	float	$tmp644	%read{13,2061} %write{13,2061}
temp	float	$tmp645	%read{13,2061} %write{13,2061}
temp	int	$tmp646	%read{13,2061} %write{13,2061}
temp	float	$tmp647	%read{13,2061} %write{13,2061}
temp	float	$tmp648	%read{13,2061} %write{13,2061}
temp	point	$tmp649	%read{13,2061} %write{13,2061}
temp	float	$tmp650	%read{13,2061} %write{13,2061}
temp	float	$tmp651	%read{13,2061} %write{13,2061}
temp	point	$tmp652	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp653	%read{13,2061} %write{13,2061}
temp	float	$tmp654	%read{13,2061} %write{13,2061}
temp	float	$tmp655	%read{13,2061} %write{13,2061}
temp	float	$tmp656	%read{13,2061} %write{13,2061}
temp	float	$tmp657	%read{13,2061} %write{13,2061}
temp	float	$tmp658	%read{13,2061} %write{13,2061}
temp	float	$tmp659	%read{13,2061} %write{13,2061}
temp	float	$tmp660	%read{13,2061} %write{13,2061}
temp	float	$tmp661	%read{13,2061} %write{13,2061}
temp	float	$tmp662	%read{13,2061} %write{13,2061}
temp	float	$tmp663	%read{13,2061} %write{13,2061}
temp	int	$tmp664	%read{13,2061} %write{13,2061}
temp	int	$tmp665	%read{13,2061} %write{13,2061}
temp	float	$tmp666	%read{13,2061} %write{13,2061}
temp	int	$tmp667	%read{13,2061} %write{13,2061}
temp	int	$tmp668	%read{13,2061} %write{13,2061}
temp	int	$tmp669	%read{13,2061} %write{13,2061}
temp	float	$tmp670	%read{13,2061} %write{13,2061}
temp	int	$tmp671	%read{13,2061} %write{13,2061}
temp	int	$tmp672	%read{13,2061} %write{13,2061}
temp	int	$tmp673	%read{13,2061} %write{13,2061}
temp	float	$tmp674	%read{13,2061} %write{13,2061}
temp	int	$tmp675	%read{13,2061} %write{13,2061}
temp	int	$tmp676	%read{13,2061} %write{13,2061}
temp	float	$tmp677	%read{13,2061} %write{13,2061}
temp	float	$tmp678	%read{13,2061} %write{13,2061}
temp	float	$tmp679	%read{13,2061} %write{13,2061}
temp	float	$tmp680	%read{13,2061} %write{13,2061}
temp	float	$tmp681	%read{13,2061} %write{13,2061}
temp	int	$tmp682	%read{13,2061} %write{13,2061}
temp	int	$tmp683	%read{13,2061} %write{13,2061}
temp	float	$tmp684	%read{13,2061} %write{13,2061}
temp	int	$tmp685	%read{13,2061} %write{13,2061}
temp	int	$tmp686	%read{13,2061} %write{13,2061}
temp	int	$tmp687	%read{13,2061} %write{13,2061}
temp	int	$tmp688	%read{13,2061} %write{13,2061}
temp	float	$tmp689	%read{13,2061} %write{13,2061}
temp	float	$tmp690	%read{13,2061} %write{13,2061}
temp	float	$tmp691	%read{13,2061} %write{13,2061}
temp	float	$tmp692	%read{13,2061} %write{13,2061}
temp	float	$tmp693	%read{13,2061} %write{13,2061}
temp	float	$tmp694	%read{13,2061} %write{13,2061}
temp	float	$tmp695	%read{13,2061} %write{13,2061}
temp	float	$tmp696	%read{13,2061} %write{13,2061}
temp	float	$tmp697	%read{13,2061} %write{13,2061}
temp	float	$tmp698	%read{13,2061} %write{13,2061}
temp	float	$tmp699	%read{13,2061} %write{13,2061}
temp	float	$tmp700	%read{13,2061} %write{13,2061}
temp	float	$tmp701	%read{13,2061} %write{13,2061}
temp	float	$tmp702	%read{13,2061} %write{13,2061}
temp	float	$tmp703	%read{13,2061} %write{13,2061}
temp	float	$tmp704	%read{13,2061} %write{13,2061}
temp	int	$tmp705	%read{13,2061} %write{13,2061}
temp	float	$tmp706	%read{13,2061} %write{13,2061}
temp	float	$tmp707	%read{13,2061} %write{13,2061}
temp	point	$tmp708	%read{13,2061} %write{13,2061}
temp	float	$tmp709	%read{13,2061} %write{13,2061}
temp	float	$tmp710	%read{13,2061} %write{13,2061}
temp	point	$tmp711	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp712	%read{13,2061} %write{13,2061}
temp	float	$tmp713	%read{13,2061} %write{13,2061}
temp	float	$tmp714	%read{13,2061} %write{13,2061}
temp	float	$tmp715	%read{13,2061} %write{13,2061}
temp	float	$tmp716	%read{13,2061} %write{13,2061}
temp	float	$tmp717	%read{13,2061} %write{13,2061}
temp	float	$tmp718	%read{13,2061} %write{13,2061}
temp	float	$tmp719	%read{13,2061} %write{13,2061}
temp	float	$tmp720	%read{13,2061} %write{13,2061}
temp	float	$tmp721	%read{13,2061} %write{13,2061}
temp	float	$tmp722	%read{13,2061} %write{13,2061}
temp	int	$tmp723	%read{13,2061} %write{13,2061}
temp	int	$tmp724	%read{13,2061} %write{13,2061}
temp	float	$tmp725	%read{13,2061} %write{13,2061}
temp	int	$tmp726	%read{13,2061} %write{13,2061}
temp	int	$tmp727	%read{13,2061} %write{13,2061}
temp	int	$tmp728	%read{13,2061} %write{13,2061}
temp	float	$tmp729	%read{13,2061} %write{13,2061}
temp	int	$tmp730	%read{13,2061} %write{13,2061}
temp	int	$tmp731	%read{13,2061} %write{13,2061}
temp	int	$tmp732	%read{13,2061} %write{13,2061}
temp	float	$tmp733	%read{13,2061} %write{13,2061}
temp	int	$tmp734	%read{13,2061} %write{13,2061}
temp	int	$tmp735	%read{13,2061} %write{13,2061}
temp	float	$tmp736	%read{13,2061} %write{13,2061}
temp	float	$tmp737	%read{13,2061} %write{13,2061}
temp	float	$tmp738	%read{13,2061} %write{13,2061}
temp	float	$tmp739	%read{13,2061} %write{13,2061}
temp	float	$tmp740	%read{13,2061} %write{13,2061}
temp	int	$tmp741	%read{13,2061} %write{13,2061}
temp	int	$tmp742	%read{13,2061} %write{13,2061}
temp	float	$tmp743	%read{13,2061} %write{13,2061}
temp	int	$tmp744	%read{13,2061} %write{13,2061}
temp	int	$tmp745	%read{13,2061} %write{13,2061}
temp	int	$tmp746	%read{13,2061} %write{13,2061}
temp	int	$tmp747	%read{13,2061} %write{13,2061}
temp	float	$tmp748	%read{13,2061} %write{13,2061}
temp	float	$tmp749	%read{13,2061} %write{13,2061}
temp	float	$tmp750	%read{13,2061} %write{13,2061}
temp	float	$tmp751	%read{13,2061} %write{13,2061}
temp	float	$tmp752	%read{13,2061} %write{13,2061}
temp	float	$tmp753	%read{13,2061} %write{13,2061}
temp	float	$tmp754	%read{13,2061} %write{13,2061}
temp	float	$tmp755	%read{13,2061} %write{13,2061}
temp	float	$tmp756	%read{13,2061} %write{13,2061}
temp	float	$tmp757	%read{13,2061} %write{13,2061}
temp	float	$tmp758	%read{13,2061} %write{13,2061}
temp	float	$tmp759	%read{13,2061} %write{13,2061}
temp	float	$tmp760	%read{13,2061} %write{13,2061}
temp	float	$tmp761	%read{13,2061} %write{13,2061}
temp	float	$tmp762	%read{13,2061} %write{13,2061}
temp	float	$tmp763	%read{13,2061} %write{13,2061}
temp	int	$tmp764	%read{13,2061} %write{13,2061}
temp	float	$tmp765	%read{13,2061} %write{13,2061}
temp	float	$tmp766	%read{13,2061} %write{13,2061}
const	int	$const14	5		%read{1511,2044} %write{2147483647,-1}
temp	point	$tmp767	%read{13,2061} %write{13,2061}
temp	float	$tmp768	%read{13,2061} %write{13,2061}
temp	float	$tmp769	%read{13,2061} %write{13,2061}
temp	point	$tmp770	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp771	%read{13,2061} %write{13,2061}
temp	float	$tmp772	%read{13,2061} %write{13,2061}
temp	float	$tmp773	%read{13,2061} %write{13,2061}
temp	float	$tmp774	%read{13,2061} %write{13,2061}
temp	float	$tmp775	%read{13,2061} %write{13,2061}
temp	float	$tmp776	%read{13,2061} %write{13,2061}
temp	float	$tmp777	%read{13,2061} %write{13,2061}
temp	float	$tmp778	%read{13,2061} %write{13,2061}
temp	float	$tmp779	%read{13,2061} %write{13,2061}
temp	float	$tmp780	%read{13,2061} %write{13,2061}
temp	float	$tmp781	%read{13,2061} %write{13,2061}
temp	int	$tmp782	%read{13,2061} %write{13,2061}
temp	int	$tmp783	%read{13,2061} %write{13,2061}
temp	float	$tmp784	%read{13,2061} %write{13,2061}
temp	int	$tmp785	%read{13,2061} %write{13,2061}
temp	int	$tmp786	%read{13,2061} %write{13,2061}
temp	int	$tmp787	%read{13,2061} %write{13,2061}
temp	float	$tmp788	%read{13,2061} %write{13,2061}
temp	int	$tmp789	%read{13,2061} %write{13,2061}
temp	int	$tmp790	%read{13,2061} %write{13,2061}
temp	int	$tmp791	%read{13,2061} %write{13,2061}
temp	float	$tmp792	%read{13,2061} %write{13,2061}
temp	int	$tmp793	%read{13,2061} %write{13,2061}
temp	int	$tmp794	%read{13,2061} %write{13,2061}
temp	float	$tmp795	%read{13,2061} %write{13,2061}
temp	float	$tmp796	%read{13,2061} %write{13,2061}
temp	float	$tmp797	%read{13,2061} %write{13,2061}
temp	float	$tmp798	%read{13,2061} %write{13,2061}
temp	float	$tmp799	%read{13,2061} %write{13,2061}
temp	int	$tmp800	%read{13,2061} %write{13,2061}
temp	int	$tmp801	%read{13,2061} %write{13,2061}
temp	float	$tmp802	%read{13,2061} %write{13,2061}
temp	int	$tmp803	%read{13,2061} %write{13,2061}
temp	int	$tmp804	%read{13,2061} %write{13,2061}
temp	int	$tmp805	%read{13,2061} %write{13,2061}
temp	int	$tmp806	%read{13,2061} %write{13,2061}
temp	float	$tmp807	%read{13,2061} %write{13,2061}
temp	float	$tmp808	%read{13,2061} %write{13,2061}
temp	float	$tmp809	%read{13,2061} %write{13,2061}
temp	float	$tmp810	%read{13,2061} %write{13,2061}
temp	float	$tmp811	%read{13,2061} %write{13,2061}
temp	float	$tmp812	%read{13,2061} %write{13,2061}
temp	float	$tmp813	%read{13,2061} %write{13,2061}
temp	float	$tmp814	%read{13,2061} %write{13,2061}
temp	float	$tmp815	%read{13,2061} %write{13,2061}
temp	float	$tmp816	%read{13,2061} %write{13,2061}
temp	float	$tmp817	%read{13,2061} %write{13,2061}
temp	float	$tmp818	%read{13,2061} %write{13,2061}
temp	float	$tmp819	%read{13,2061} %write{13,2061}
temp	float	$tmp820	%read{13,2061} %write{13,2061}
temp	float	$tmp821	%read{13,2061} %write{13,2061}
temp	float	$tmp822	%read{13,2061} %write{13,2061}
temp	int	$tmp823	%read{13,2061} %write{13,2061}
temp	int	$tmp824	%read{13,2061} %write{13,2061}
temp	float	$tmp825	%read{13,2061} %write{13,2061}
temp	point	$tmp826	%read{13,2061} %write{13,2061}
temp	float	$tmp827	%read{13,2061} %write{13,2061}
temp	float	$tmp828	%read{13,2061} %write{13,2061}
temp	point	$tmp829	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp830	%read{13,2061} %write{13,2061}
temp	float	$tmp831	%read{13,2061} %write{13,2061}
temp	float	$tmp832	%read{13,2061} %write{13,2061}
temp	float	$tmp833	%read{13,2061} %write{13,2061}
temp	float	$tmp834	%read{13,2061} %write{13,2061}
temp	float	$tmp835	%read{13,2061} %write{13,2061}
temp	float	$tmp836	%read{13,2061} %write{13,2061}
temp	float	$tmp837	%read{13,2061} %write{13,2061}
temp	float	$tmp838	%read{13,2061} %write{13,2061}
temp	float	$tmp839	%read{13,2061} %write{13,2061}
temp	float	$tmp840	%read{13,2061} %write{13,2061}
temp	int	$tmp841	%read{13,2061} %write{13,2061}
temp	int	$tmp842	%read{13,2061} %write{13,2061}
temp	float	$tmp843	%read{13,2061} %write{13,2061}
temp	int	$tmp844	%read{13,2061} %write{13,2061}
temp	int	$tmp845	%read{13,2061} %write{13,2061}
temp	int	$tmp846	%read{13,2061} %write{13,2061}
temp	float	$tmp847	%read{13,2061} %write{13,2061}
temp	int	$tmp848	%read{13,2061} %write{13,2061}
temp	int	$tmp849	%read{13,2061} %write{13,2061}
temp	int	$tmp850	%read{13,2061} %write{13,2061}
temp	float	$tmp851	%read{13,2061} %write{13,2061}
temp	int	$tmp852	%read{13,2061} %write{13,2061}
temp	int	$tmp853	%read{13,2061} %write{13,2061}
temp	float	$tmp854	%read{13,2061} %write{13,2061}
temp	float	$tmp855	%read{13,2061} %write{13,2061}
temp	float	$tmp856	%read{13,2061} %write{13,2061}
temp	float	$tmp857	%read{13,2061} %write{13,2061}
temp	float	$tmp858	%read{13,2061} %write{13,2061}
temp	int	$tmp859	%read{13,2061} %write{13,2061}
temp	int	$tmp860	%read{13,2061} %write{13,2061}
temp	float	$tmp861	%read{13,2061} %write{13,2061}
temp	int	$tmp862	%read{13,2061} %write{13,2061}
temp	int	$tmp863	%read{13,2061} %write{13,2061}
temp	int	$tmp864	%read{13,2061} %write{13,2061}
temp	int	$tmp865	%read{13,2061} %write{13,2061}
temp	float	$tmp866	%read{13,2061} %write{13,2061}
temp	float	$tmp867	%read{13,2061} %write{13,2061}
temp	float	$tmp868	%read{13,2061} %write{13,2061}
temp	float	$tmp869	%read{13,2061} %write{13,2061}
temp	float	$tmp870	%read{13,2061} %write{13,2061}
temp	float	$tmp871	%read{13,2061} %write{13,2061}
temp	float	$tmp872	%read{13,2061} %write{13,2061}
temp	float	$tmp873	%read{13,2061} %write{13,2061}
temp	float	$tmp874	%read{13,2061} %write{13,2061}
temp	float	$tmp875	%read{13,2061} %write{13,2061}
temp	float	$tmp876	%read{13,2061} %write{13,2061}
temp	float	$tmp877	%read{13,2061} %write{13,2061}
temp	float	$tmp878	%read{13,2061} %write{13,2061}
temp	float	$tmp879	%read{13,2061} %write{13,2061}
temp	float	$tmp880	%read{13,2061} %write{13,2061}
temp	float	$tmp881	%read{13,2061} %write{13,2061}
temp	int	$tmp882	%read{13,2061} %write{13,2061}
temp	float	$tmp883	%read{13,2061} %write{13,2061}
temp	point	$tmp884	%read{13,2061} %write{13,2061}
temp	float	$tmp885	%read{13,2061} %write{13,2061}
temp	float	$tmp886	%read{13,2061} %write{13,2061}
temp	point	$tmp887	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp888	%read{13,2061} %write{13,2061}
temp	float	$tmp889	%read{13,2061} %write{13,2061}
temp	float	$tmp890	%read{13,2061} %write{13,2061}
temp	float	$tmp891	%read{13,2061} %write{13,2061}
temp	float	$tmp892	%read{13,2061} %write{13,2061}
temp	float	$tmp893	%read{13,2061} %write{13,2061}
temp	float	$tmp894	%read{13,2061} %write{13,2061}
temp	float	$tmp895	%read{13,2061} %write{13,2061}
temp	float	$tmp896	%read{13,2061} %write{13,2061}
temp	float	$tmp897	%read{13,2061} %write{13,2061}
temp	float	$tmp898	%read{13,2061} %write{13,2061}
temp	int	$tmp899	%read{13,2061} %write{13,2061}
temp	int	$tmp900	%read{13,2061} %write{13,2061}
temp	float	$tmp901	%read{13,2061} %write{13,2061}
temp	int	$tmp902	%read{13,2061} %write{13,2061}
temp	int	$tmp903	%read{13,2061} %write{13,2061}
temp	int	$tmp904	%read{13,2061} %write{13,2061}
temp	float	$tmp905	%read{13,2061} %write{13,2061}
temp	int	$tmp906	%read{13,2061} %write{13,2061}
temp	int	$tmp907	%read{13,2061} %write{13,2061}
temp	int	$tmp908	%read{13,2061} %write{13,2061}
temp	float	$tmp909	%read{13,2061} %write{13,2061}
temp	int	$tmp910	%read{13,2061} %write{13,2061}
temp	int	$tmp911	%read{13,2061} %write{13,2061}
temp	float	$tmp912	%read{13,2061} %write{13,2061}
temp	float	$tmp913	%read{13,2061} %write{13,2061}
temp	float	$tmp914	%read{13,2061} %write{13,2061}
temp	float	$tmp915	%read{13,2061} %write{13,2061}
temp	float	$tmp916	%read{13,2061} %write{13,2061}
temp	int	$tmp917	%read{13,2061} %write{13,2061}
temp	int	$tmp918	%read{13,2061} %write{13,2061}
temp	float	$tmp919	%read{13,2061} %write{13,2061}
temp	int	$tmp920	%read{13,2061} %write{13,2061}
temp	int	$tmp921	%read{13,2061} %write{13,2061}
temp	int	$tmp922	%read{13,2061} %write{13,2061}
temp	int	$tmp923	%read{13,2061} %write{13,2061}
temp	float	$tmp924	%read{13,2061} %write{13,2061}
temp	float	$tmp925	%read{13,2061} %write{13,2061}
temp	float	$tmp926	%read{13,2061} %write{13,2061}
temp	float	$tmp927	%read{13,2061} %write{13,2061}
temp	float	$tmp928	%read{13,2061} %write{13,2061}
temp	float	$tmp929	%read{13,2061} %write{13,2061}
temp	float	$tmp930	%read{13,2061} %write{13,2061}
temp	float	$tmp931	%read{13,2061} %write{13,2061}
temp	float	$tmp932	%read{13,2061} %write{13,2061}
temp	float	$tmp933	%read{13,2061} %write{13,2061}
temp	float	$tmp934	%read{13,2061} %write{13,2061}
temp	float	$tmp935	%read{13,2061} %write{13,2061}
temp	float	$tmp936	%read{13,2061} %write{13,2061}
temp	float	$tmp937	%read{13,2061} %write{13,2061}
temp	float	$tmp938	%read{13,2061} %write{13,2061}
temp	float	$tmp939	%read{13,2061} %write{13,2061}
temp	int	$tmp940	%read{13,2061} %write{13,2061}
temp	point	$tmp941	%read{13,2061} %write{13,2061}
temp	float	$tmp942	%read{13,2061} %write{13,2061}
temp	float	$tmp943	%read{13,2061} %write{13,2061}
temp	point	$tmp944	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp945	%read{13,2061} %write{13,2061}
temp	float	$tmp946	%read{13,2061} %write{13,2061}
temp	float	$tmp947	%read{13,2061} %write{13,2061}
temp	float	$tmp948	%read{13,2061} %write{13,2061}
temp	float	$tmp949	%read{13,2061} %write{13,2061}
temp	float	$tmp950	%read{13,2061} %write{13,2061}
temp	float	$tmp951	%read{13,2061} %write{13,2061}
temp	float	$tmp952	%read{13,2061} %write{13,2061}
temp	float	$tmp953	%read{13,2061} %write{13,2061}
temp	float	$tmp954	%read{13,2061} %write{13,2061}
temp	float	$tmp955	%read{13,2061} %write{13,2061}
temp	int	$tmp956	%read{13,2061} %write{13,2061}
temp	int	$tmp957	%read{13,2061} %write{13,2061}
temp	float	$tmp958	%read{13,2061} %write{13,2061}
temp	int	$tmp959	%read{13,2061} %write{13,2061}
temp	int	$tmp960	%read{13,2061} %write{13,2061}
temp	int	$tmp961	%read{13,2061} %write{13,2061}
temp	float	$tmp962	%read{13,2061} %write{13,2061}
temp	int	$tmp963	%read{13,2061} %write{13,2061}
temp	int	$tmp964	%read{13,2061} %write{13,2061}
temp	int	$tmp965	%read{13,2061} %write{13,2061}
temp	float	$tmp966	%read{13,2061} %write{13,2061}
temp	int	$tmp967	%read{13,2061} %write{13,2061}
temp	int	$tmp968	%read{13,2061} %write{13,2061}
temp	float	$tmp969	%read{13,2061} %write{13,2061}
temp	float	$tmp970	%read{13,2061} %write{13,2061}
temp	float	$tmp971	%read{13,2061} %write{13,2061}
temp	float	$tmp972	%read{13,2061} %write{13,2061}
temp	float	$tmp973	%read{13,2061} %write{13,2061}
temp	int	$tmp974	%read{13,2061} %write{13,2061}
temp	int	$tmp975	%read{13,2061} %write{13,2061}
temp	float	$tmp976	%read{13,2061} %write{13,2061}
temp	int	$tmp977	%read{13,2061} %write{13,2061}
temp	int	$tmp978	%read{13,2061} %write{13,2061}
temp	int	$tmp979	%read{13,2061} %write{13,2061}
temp	int	$tmp980	%read{13,2061} %write{13,2061}
temp	float	$tmp981	%read{13,2061} %write{13,2061}
temp	float	$tmp982	%read{13,2061} %write{13,2061}
temp	float	$tmp983	%read{13,2061} %write{13,2061}
temp	float	$tmp984	%read{13,2061} %write{13,2061}
temp	float	$tmp985	%read{13,2061} %write{13,2061}
temp	float	$tmp986	%read{13,2061} %write{13,2061}
temp	float	$tmp987	%read{13,2061} %write{13,2061}
temp	float	$tmp988	%read{13,2061} %write{13,2061}
temp	float	$tmp989	%read{13,2061} %write{13,2061}
temp	float	$tmp990	%read{13,2061} %write{13,2061}
temp	float	$tmp991	%read{13,2061} %write{13,2061}
temp	float	$tmp992	%read{13,2061} %write{13,2061}
temp	float	$tmp993	%read{13,2061} %write{13,2061}
temp	float	$tmp994	%read{13,2061} %write{13,2061}
temp	float	$tmp995	%read{13,2061} %write{13,2061}
temp	float	$tmp996	%read{13,2061} %write{13,2061}
temp	int	$tmp997	%read{13,2061} %write{13,2061}
temp	float	$tmp998	%read{13,2061} %write{13,2061}
temp	float	$tmp999	%read{13,2061} %write{13,2061}
temp	point	$tmp1000	%read{13,2061} %write{13,2061}
temp	float	$tmp1001	%read{13,2061} %write{13,2061}
temp	float	$tmp1002	%read{13,2061} %write{13,2061}
temp	point	$tmp1003	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp1004	%read{13,2061} %write{13,2061}
temp	float	$tmp1005	%read{13,2061} %write{13,2061}
temp	float	$tmp1006	%read{13,2061} %write{13,2061}
temp	float	$tmp1007	%read{13,2061} %write{13,2061}
temp	float	$tmp1008	%read{13,2061} %write{13,2061}
temp	float	$tmp1009	%read{13,2061} %write{13,2061}
temp	float	$tmp1010	%read{13,2061} %write{13,2061}
temp	float	$tmp1011	%read{13,2061} %write{13,2061}
temp	float	$tmp1012	%read{13,2061} %write{13,2061}
temp	float	$tmp1013	%read{13,2061} %write{13,2061}
temp	float	$tmp1014	%read{13,2061} %write{13,2061}
temp	int	$tmp1015	%read{13,2061} %write{13,2061}
temp	int	$tmp1016	%read{13,2061} %write{13,2061}
temp	float	$tmp1017	%read{13,2061} %write{13,2061}
temp	int	$tmp1018	%read{13,2061} %write{13,2061}
temp	int	$tmp1019	%read{13,2061} %write{13,2061}
temp	int	$tmp1020	%read{13,2061} %write{13,2061}
temp	float	$tmp1021	%read{13,2061} %write{13,2061}
temp	int	$tmp1022	%read{13,2061} %write{13,2061}
temp	int	$tmp1023	%read{13,2061} %write{13,2061}
temp	int	$tmp1024	%read{13,2061} %write{13,2061}
temp	float	$tmp1025	%read{13,2061} %write{13,2061}
temp	int	$tmp1026	%read{13,2061} %write{13,2061}
temp	int	$tmp1027	%read{13,2061} %write{13,2061}
temp	float	$tmp1028	%read{13,2061} %write{13,2061}
temp	float	$tmp1029	%read{13,2061} %write{13,2061}
temp	float	$tmp1030	%read{13,2061} %write{13,2061}
temp	float	$tmp1031	%read{13,2061} %write{13,2061}
temp	float	$tmp1032	%read{13,2061} %write{13,2061}
temp	int	$tmp1033	%read{13,2061} %write{13,2061}
temp	int	$tmp1034	%read{13,2061} %write{13,2061}
temp	float	$tmp1035	%read{13,2061} %write{13,2061}
temp	int	$tmp1036	%read{13,2061} %write{13,2061}
temp	int	$tmp1037	%read{13,2061} %write{13,2061}
temp	int	$tmp1038	%read{13,2061} %write{13,2061}
temp	int	$tmp1039	%read{13,2061} %write{13,2061}
temp	float	$tmp1040	%read{13,2061} %write{13,2061}
temp	float	$tmp1041	%read{13,2061} %write{13,2061}
temp	float	$tmp1042	%read{13,2061} %write{13,2061}
temp	float	$tmp1043	%read{13,2061} %write{13,2061}
temp	float	$tmp1044	%read{13,2061} %write{13,2061}
temp	float	$tmp1045	%read{13,2061} %write{13,2061}
temp	float	$tmp1046	%read{13,2061} %write{13,2061}
temp	float	$tmp1047	%read{13,2061} %write{13,2061}
temp	float	$tmp1048	%read{13,2061} %write{13,2061}
temp	float	$tmp1049	%read{13,2061} %write{13,2061}
temp	float	$tmp1050	%read{13,2061} %write{13,2061}
temp	float	$tmp1051	%read{13,2061} %write{13,2061}
temp	float	$tmp1052	%read{13,2061} %write{13,2061}
temp	float	$tmp1053	%read{13,2061} %write{13,2061}
temp	float	$tmp1054	%read{13,2061} %write{13,2061}
temp	float	$tmp1055	%read{13,2061} %write{13,2061}
temp	int	$tmp1056	%read{13,2061} %write{13,2061}
temp	float	$tmp1057	%read{13,2061} %write{13,2061}
temp	float	$tmp1058	%read{13,2061} %write{13,2061}
temp	point	$tmp1059	%read{13,2061} %write{13,2061}
temp	float	$tmp1060	%read{13,2061} %write{13,2061}
temp	float	$tmp1061	%read{13,2061} %write{13,2061}
temp	point	$tmp1062	%read{2147483647,-1} %write{13,2061}
temp	float	$tmp1063	%read{13,2061} %write{13,2061}
temp	float	$tmp1064	%read{13,2061} %write{13,2061}
temp	float	$tmp1065	%read{13,2061} %write{13,2061}
temp	float	$tmp1066	%read{13,2061} %write{13,2061}
temp	float	$tmp1067	%read{13,2061} %write{13,2061}
temp	float	$tmp1068	%read{13,2061} %write{13,2061}
temp	float	$tmp1069	%read{13,2061} %write{13,2061}
temp	float	$tmp1070	%read{13,2061} %write{13,2061}
temp	float	$tmp1071	%read{13,2061} %write{13,2061}
temp	float	$tmp1072	%read{13,2061} %write{13,2061}
temp	float	$tmp1073	%read{13,2061} %write{13,2061}
temp	int	$tmp1074	%read{13,2061} %write{13,2061}
temp	int	$tmp1075	%read{13,2061} %write{13,2061}
temp	float	$tmp1076	%read{13,2061} %write{13,2061}
temp	int	$tmp1077	%read{13,2061} %write{13,2061}
temp	int	$tmp1078	%read{13,2061} %write{13,2061}
temp	int	$tmp1079	%read{13,2061} %write{13,2061}
temp	float	$tmp1080	%read{13,2061} %write{13,2061}
temp	int	$tmp1081	%read{13,2061} %write{13,2061}
temp	int	$tmp1082	%read{13,2061} %write{13,2061}
temp	int	$tmp1083	%read{13,2061} %write{13,2061}
temp	float	$tmp1084	%read{13,2061} %write{13,2061}
temp	int	$tmp1085	%read{13,2061} %write{13,2061}
temp	int	$tmp1086	%read{13,2061} %write{13,2061}
temp	float	$tmp1087	%read{13,2061} %write{13,2061}
temp	float	$tmp1088	%read{13,2061} %write{13,2061}
temp	float	$tmp1089	%read{13,2061} %write{13,2061}
temp	float	$tmp1090	%read{13,2061} %write{13,2061}
temp	float	$tmp1091	%read{13,2061} %write{13,2061}
temp	int	$tmp1092	%read{13,2061} %write{13,2061}
temp	int	$tmp1093	%read{13,2061} %write{13,2061}
temp	float	$tmp1094	%read{13,2061} %write{13,2061}
temp	int	$tmp1095	%read{13,2061} %write{13,2061}
temp	int	$tmp1096	%read{13,2061} %write{13,2061}
temp	int	$tmp1097	%read{13,2061} %write{13,2061}
temp	int	$tmp1098	%read{13,2061} %write{13,2061}
temp	float	$tmp1099	%read{13,2061} %write{13,2061}
temp	float	$tmp1100	%read{13,2061} %write{13,2061}
temp	float	$tmp1101	%read{13,2061} %write{13,2061}
temp	float	$tmp1102	%read{13,2061} %write{13,2061}
temp	float	$tmp1103	%read{13,2061} %write{13,2061}
temp	float	$tmp1104	%read{13,2061} %write{13,2061}
temp	float	$tmp1105	%read{13,2061} %write{13,2061}
temp	float	$tmp1106	%read{13,2061} %write{13,2061}
temp	float	$tmp1107	%read{13,2061} %write{13,2061}
temp	float	$tmp1108	%read{13,2061} %write{13,2061}
temp	float	$tmp1109	%read{13,2061} %write{13,2061}
temp	float	$tmp1110	%read{13,2061} %write{13,2061}
temp	float	$tmp1111	%read{13,2061} %write{13,2061}
temp	float	$tmp1112	%read{13,2061} %write{13,2061}
temp	float	$tmp1113	%read{13,2061} %write{13,2061}
temp	float	$tmp1114	%read{13,2061} %write{13,2061}
temp	int	$tmp1115	%read{13,2061} %write{13,2061}
temp	int	$tmp1116	%read{13,2061} %write{13,2061}
temp	float	$tmp1117	%read{13,2061} %write{13,2061}
temp	point	$tmp1118	%read{13,2061} %write{13,2061}
temp	float	$tmp1119	%read{13,2061} %write{13,2061}
temp	float	$tmp1120	%read{13,2061} %write{13,2061}
temp	point	$tmp1121	%read{13,2061} %write{13,2061}
const	float	$const15	1024		%read{2055,2055} %write{2147483647,-1}
temp	float	$tmp1122	%read{13,2061} %write{13,2061}
temp	int	$tmp1123	%read{2147483647,-1} %write{13,2061}
temp	int	$tmp1124	%read{2147483647,-1} %write{13,2061}
temp	int	$tmp1125	%read{2063,2063} %write{2062,2062}
temp	int	$tmp1126	%read{2066,2066} %write{2065,2065}
temp	int	$tmp1127	%read{2069,2069} %write{2068,2068}
temp	float	$tmp1128	%read{2074,2074} %write{2073,2073}
const	float	$const16	0.33329999		%read{2072,2072} %write{2147483647,-1}
temp	vector	$tmp1129	%read{2073,2073} %write{2072,2072}
temp	float	$tmp1130	%read{2075,2075} %write{2074,2074}
code UVW
# OSL\SimpleTiles.osl:75
# 	
	point		UVW u v $const2 	%filename{"OSL\SimpleTiles.osl"} %line{75} %argrw{"wrrr"}
code ___main___
# OSL\SimpleTiles.osl:148
# 	vector Tiling = vector(U_Count, V_Count, 0.0);
	assign		Overlap $const3 	%filename{"OSL\SimpleTiles.osl"} %line{148} %argrw{"wr"}
# OSL\SimpleTiles.osl:149
# 	Col = GapColor;
	vector		Tiling U_Count V_Count $const2 	%line{149} %argrw{"wrrr"}
# OSL\SimpleTiles.osl:150
# 	point uvw = UVW * Tiling / Scale;
	assign		Col GapColor 	%line{150} %argrw{"wr"}
# OSL\SimpleTiles.osl:151
# 	float to = TilingOffset;
	mul		$tmp1 UVW Tiling 	%line{151} %argrw{"wrr"}
	div		uvw $tmp1 Scale 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:152
# 	float to2 = to*0.5;
	assign		to TilingOffset 	%line{152} %argrw{"wr"}
# OSL\SimpleTiles.osl:153
# 	
	mul		to2 to $const4 	%line{153} %argrw{"wrr"}
# OSL\SimpleTiles.osl:155
# 
	div		Roundness Radius $const5 	%line{155} %argrw{"wrr"}
# OSL\SimpleTiles.osl:158
# 	// Fractional UVW
	floor		fluvw uvw 	%line{158} %argrw{"wr"}
# OSL\SimpleTiles.osl:160
# 	
	sub		fruvw uvw fluvw 	%line{160} %argrw{"wrr"}
# OSL\SimpleTiles.osl:163
# 		for (int yy = -Overlap; yy <= Overlap; yy++)
	for		$tmp2 13 14 2060 2062 	%line{163} %argrw{"r"}
	neg		___323_xx Overlap 	%argrw{"wr"}
	le		$tmp2 ___323_xx Overlap 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:164
# 		{
	for		$tmp3 16 17 2058 2060 	%line{164} %argrw{"r"}
	neg		___324_yy Overlap 	%argrw{"wr"}
	le		$tmp3 ___324_yy Overlap 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:166
# 			int   HitIdx = 0;
	sub		$tmp4 uvw fluvw 	%line{166} %argrw{"wrr"}
	assign		$tmp6 ___323_xx 	%argrw{"wr"}
	assign		$tmp7 ___324_yy 	%argrw{"wr"}
	point		$tmp5 $tmp6 $tmp7 $const2 	%argrw{"wrrr"}
	sub		___325_lookup $tmp4 $tmp5 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:167
# 			// Running Bond
	assign		___325_HitIdx $const1 	%line{167} %argrw{"wr"}
# OSL\SimpleTiles.osl:169
# 			{
	eq		$tmp8 TileMode $const1 	%line{169} %argrw{"wrr"}
	if		$tmp8 236 236 	%argrw{"r"}
# OSL\SimpleTiles.osl:171
# 					Tile = doRect(0.0 ,1.0, 0.0, 0.5, 1, 1, Roundness, PARAM);
	eq		$tmp9 Tile $const1 	%line{171} %argrw{"wrr"}
	if		$tmp9 130 130 	%argrw{"r"}
# OSL\SimpleTiles.osl:172
# 				if (Tile == 0) 
	assign		$tmp11 ___323_xx 	%line{172} %argrw{"wr"}
	assign		$tmp12 ___324_yy 	%argrw{"wr"}
	point		$tmp10 $tmp11 $tmp12 $const2 	%argrw{"wrrr"}
	add		$tmp13 fluvw $tmp10 	%argrw{"wrr"}
	mul		$tmp14 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp15 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 130 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp16 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp17 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp16 $tmp17 	%argrw{"wrr"}
	compref		$tmp18 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp19 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp18 $tmp19 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp20 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp20 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp21 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp21 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp22 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp22 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp23 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const4 $tmp23 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp24 ___321_lox $tmp14 	%line{26} %argrw{"wrr"}
	lt		$tmp25 ___321_x $tmp24 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const1 	%argrw{"wrr"}
	if		$tmp26 52 56 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp27 ___321_hix $tmp14 	%line{27} %argrw{"wrr"}
	gt		$tmp28 ___321_x $tmp27 	%argrw{"wrr"}
	neq		$tmp29 $tmp28 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp26 $tmp29 	%line{26} %argrw{"wr"}
	neq		$tmp30 $tmp26 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp30 58 62 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp31 ___321_loy $tmp14 	%line{28} %argrw{"wrr"}
	lt		$tmp32 ___321_y $tmp31 	%argrw{"wrr"}
	neq		$tmp33 $tmp32 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp30 $tmp33 	%line{27} %argrw{"wr"}
	neq		$tmp34 $tmp30 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp34 64 68 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp35 ___321_hiy $tmp14 	%line{29} %argrw{"wrr"}
	gt		$tmp36 ___321_y $tmp35 	%argrw{"wrr"}
	neq		$tmp37 $tmp36 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp34 $tmp37 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp34 71 71 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp14 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp38 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp38 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp39 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp39 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp40 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp40 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp41 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp41 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp43 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp43 83 87 	%argrw{"r"}
	assign		$tmp42 ___321_lx 	%argrw{"wr"}
	gt		$tmp44 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp44 86 87 	%argrw{"r"}
	assign		$tmp42 ___321_hx 	%argrw{"wr"}
	assign		$tmp42 $const2 	%argrw{"wr"}
	lt		$tmp46 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp46 90 94 	%argrw{"r"}
	assign		$tmp45 ___321_ly 	%argrw{"wr"}
	gt		$tmp47 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp47 93 94 	%argrw{"r"}
	assign		$tmp45 ___321_hy 	%argrw{"wr"}
	assign		$tmp45 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp42 $tmp45 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp48 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp48 100 100 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp49 Roundness $tmp15 	%line{48} %argrw{"wrr"}
	if		$tmp49 106 127 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp51 Roundness $tmp15 	%line{49} %argrw{"wrr"}
	add		$tmp52 Roundness $tmp15 	%argrw{"wrr"}
	smoothstep	$tmp50 $tmp51 $tmp52 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp50 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp53 ___321_lox $tmp14 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp53 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp54 ___321_loy $tmp14 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp54 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp55 ___321_hix $tmp14 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp55 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp56 ___321_hiy $tmp14 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp56 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp57 $tmp15 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp57 $tmp15 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp59 $tmp15 	%line{59} %argrw{"wr"}
	neg		$tmp60 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp58 $tmp59 $tmp15 $tmp60 	%argrw{"wrrr"}
	mul		Bump Bump $tmp58 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp62 $tmp15 	%line{60} %argrw{"wr"}
	smoothstep	$tmp61 $tmp62 $tmp15 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp61 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp64 $tmp15 	%line{61} %argrw{"wr"}
	neg		$tmp65 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp63 $tmp64 $tmp15 $tmp65 	%argrw{"wrrr"}
	mul		Bump Bump $tmp63 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const3 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:173
# 					Tile = doRect(to, to+1.0, 0.5, 1.0, 2, 2, Roundness, PARAM);
	eq		$tmp66 Tile $const1 	%line{173} %argrw{"wrr"}
	if		$tmp66 236 236 	%argrw{"r"}
# OSL\SimpleTiles.osl:174
# 			}
	add		$tmp67 to $const6 	%line{174} %argrw{"wrr"}
	assign		$tmp69 ___323_xx 	%argrw{"wr"}
	assign		$tmp70 ___324_yy 	%argrw{"wr"}
	point		$tmp68 $tmp69 $tmp70 $const2 	%argrw{"wrrr"}
	add		$tmp71 fluvw $tmp68 	%argrw{"wrr"}
	mul		$tmp72 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp73 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 236 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp74 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp75 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp74 $tmp75 	%argrw{"wrr"}
	compref		$tmp76 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp77 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp76 $tmp77 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp78 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox to $tmp78 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp79 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp67 $tmp79 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp80 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp80 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp81 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp81 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp82 ___321_lox $tmp72 	%line{26} %argrw{"wrr"}
	lt		$tmp83 ___321_x $tmp82 	%argrw{"wrr"}
	neq		$tmp84 $tmp83 $const1 	%argrw{"wrr"}
	if		$tmp84 158 162 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp85 ___321_hix $tmp72 	%line{27} %argrw{"wrr"}
	gt		$tmp86 ___321_x $tmp85 	%argrw{"wrr"}
	neq		$tmp87 $tmp86 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp84 $tmp87 	%line{26} %argrw{"wr"}
	neq		$tmp88 $tmp84 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp88 164 168 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp89 ___321_loy $tmp72 	%line{28} %argrw{"wrr"}
	lt		$tmp90 ___321_y $tmp89 	%argrw{"wrr"}
	neq		$tmp91 $tmp90 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp88 $tmp91 	%line{27} %argrw{"wr"}
	neq		$tmp92 $tmp88 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp92 170 174 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp93 ___321_hiy $tmp72 	%line{29} %argrw{"wrr"}
	gt		$tmp94 ___321_y $tmp93 	%argrw{"wrr"}
	neq		$tmp95 $tmp94 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp92 $tmp95 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp92 177 177 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp72 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp96 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp96 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp97 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp97 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp98 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp98 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp99 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp99 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp101 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp101 189 193 	%argrw{"r"}
	assign		$tmp100 ___321_lx 	%argrw{"wr"}
	gt		$tmp102 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp102 192 193 	%argrw{"r"}
	assign		$tmp100 ___321_hx 	%argrw{"wr"}
	assign		$tmp100 $const2 	%argrw{"wr"}
	lt		$tmp104 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp104 196 200 	%argrw{"r"}
	assign		$tmp103 ___321_ly 	%argrw{"wr"}
	gt		$tmp105 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp105 199 200 	%argrw{"r"}
	assign		$tmp103 ___321_hy 	%argrw{"wr"}
	assign		$tmp103 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp100 $tmp103 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp106 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp106 206 206 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp107 Roundness $tmp73 	%line{48} %argrw{"wrr"}
	if		$tmp107 212 233 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp109 Roundness $tmp73 	%line{49} %argrw{"wrr"}
	add		$tmp110 Roundness $tmp73 	%argrw{"wrr"}
	smoothstep	$tmp108 $tmp109 $tmp110 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp108 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp111 ___321_lox $tmp72 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp111 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp112 ___321_loy $tmp72 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp112 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp113 ___321_hix $tmp72 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp113 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp114 ___321_hiy $tmp72 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp114 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp115 $tmp73 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp115 $tmp73 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp117 $tmp73 	%line{59} %argrw{"wr"}
	neg		$tmp118 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp116 $tmp117 $tmp73 $tmp118 	%argrw{"wrrr"}
	mul		Bump Bump $tmp116 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp120 $tmp73 	%line{60} %argrw{"wr"}
	smoothstep	$tmp119 $tmp120 $tmp73 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp119 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp122 $tmp73 	%line{61} %argrw{"wr"}
	neg		$tmp123 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp121 $tmp122 $tmp73 $tmp123 	%argrw{"wrrr"}
	mul		Bump Bump $tmp121 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const10 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:177
# 			{
	eq		$tmp124 TileMode $const3 	%line{177} %argrw{"wrr"}
	if		$tmp124 658 658 	%argrw{"r"}
# OSL\SimpleTiles.osl:179
# 					Tile = doRect(0.0 ,0.5, 0.0, 0.5, 1, 1, Roundness, PARAM);
	eq		$tmp125 Tile $const1 	%line{179} %argrw{"wrr"}
	if		$tmp125 343 343 	%argrw{"r"}
# OSL\SimpleTiles.osl:180
# 				if (Tile == 0) 
	assign		$tmp127 ___323_xx 	%line{180} %argrw{"wr"}
	assign		$tmp128 ___324_yy 	%argrw{"wr"}
	point		$tmp126 $tmp127 $tmp128 $const2 	%argrw{"wrrr"}
	add		$tmp129 fluvw $tmp126 	%argrw{"wrr"}
	mul		$tmp130 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp131 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 343 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp132 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp133 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp132 $tmp133 	%argrw{"wrr"}
	compref		$tmp134 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp135 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp134 $tmp135 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp136 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp136 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp137 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const4 $tmp137 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp138 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp138 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp139 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const4 $tmp139 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp140 ___321_lox $tmp130 	%line{26} %argrw{"wrr"}
	lt		$tmp141 ___321_x $tmp140 	%argrw{"wrr"}
	neq		$tmp142 $tmp141 $const1 	%argrw{"wrr"}
	if		$tmp142 265 269 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp143 ___321_hix $tmp130 	%line{27} %argrw{"wrr"}
	gt		$tmp144 ___321_x $tmp143 	%argrw{"wrr"}
	neq		$tmp145 $tmp144 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp142 $tmp145 	%line{26} %argrw{"wr"}
	neq		$tmp146 $tmp142 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp146 271 275 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp147 ___321_loy $tmp130 	%line{28} %argrw{"wrr"}
	lt		$tmp148 ___321_y $tmp147 	%argrw{"wrr"}
	neq		$tmp149 $tmp148 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp146 $tmp149 	%line{27} %argrw{"wr"}
	neq		$tmp150 $tmp146 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp150 277 281 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp151 ___321_hiy $tmp130 	%line{29} %argrw{"wrr"}
	gt		$tmp152 ___321_y $tmp151 	%argrw{"wrr"}
	neq		$tmp153 $tmp152 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp150 $tmp153 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp150 284 284 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp130 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp154 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp154 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp155 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp155 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp156 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp156 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp157 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp157 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp159 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp159 296 300 	%argrw{"r"}
	assign		$tmp158 ___321_lx 	%argrw{"wr"}
	gt		$tmp160 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp160 299 300 	%argrw{"r"}
	assign		$tmp158 ___321_hx 	%argrw{"wr"}
	assign		$tmp158 $const2 	%argrw{"wr"}
	lt		$tmp162 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp162 303 307 	%argrw{"r"}
	assign		$tmp161 ___321_ly 	%argrw{"wr"}
	gt		$tmp163 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp163 306 307 	%argrw{"r"}
	assign		$tmp161 ___321_hy 	%argrw{"wr"}
	assign		$tmp161 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp158 $tmp161 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp164 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp164 313 313 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp165 Roundness $tmp131 	%line{48} %argrw{"wrr"}
	if		$tmp165 319 340 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp167 Roundness $tmp131 	%line{49} %argrw{"wrr"}
	add		$tmp168 Roundness $tmp131 	%argrw{"wrr"}
	smoothstep	$tmp166 $tmp167 $tmp168 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp166 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp169 ___321_lox $tmp130 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp169 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp170 ___321_loy $tmp130 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp170 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp171 ___321_hix $tmp130 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp171 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp172 ___321_hiy $tmp130 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp172 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp173 $tmp131 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp173 $tmp131 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp175 $tmp131 	%line{59} %argrw{"wr"}
	neg		$tmp176 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp174 $tmp175 $tmp131 $tmp176 	%argrw{"wrrr"}
	mul		Bump Bump $tmp174 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp178 $tmp131 	%line{60} %argrw{"wr"}
	smoothstep	$tmp177 $tmp178 $tmp131 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp177 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp180 $tmp131 	%line{61} %argrw{"wr"}
	neg		$tmp181 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp179 $tmp180 $tmp131 $tmp181 	%argrw{"wrrr"}
	mul		Bump Bump $tmp179 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const3 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:181
# 					Tile = doRect(0.0, 0.5, 0.5, 1.0, 2, 2, Roundness, PARAM);
	eq		$tmp182 Tile $const1 	%line{181} %argrw{"wrr"}
	if		$tmp182 448 448 	%argrw{"r"}
# OSL\SimpleTiles.osl:182
# 				if (Tile == 0) 
	assign		$tmp184 ___323_xx 	%line{182} %argrw{"wr"}
	assign		$tmp185 ___324_yy 	%argrw{"wr"}
	point		$tmp183 $tmp184 $tmp185 $const2 	%argrw{"wrrr"}
	add		$tmp186 fluvw $tmp183 	%argrw{"wrr"}
	mul		$tmp187 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp188 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 448 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp189 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp190 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp189 $tmp190 	%argrw{"wrr"}
	compref		$tmp191 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp192 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp191 $tmp192 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp193 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp193 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp194 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const4 $tmp194 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp195 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp195 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp196 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp196 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp197 ___321_lox $tmp187 	%line{26} %argrw{"wrr"}
	lt		$tmp198 ___321_x $tmp197 	%argrw{"wrr"}
	neq		$tmp199 $tmp198 $const1 	%argrw{"wrr"}
	if		$tmp199 370 374 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp200 ___321_hix $tmp187 	%line{27} %argrw{"wrr"}
	gt		$tmp201 ___321_x $tmp200 	%argrw{"wrr"}
	neq		$tmp202 $tmp201 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp199 $tmp202 	%line{26} %argrw{"wr"}
	neq		$tmp203 $tmp199 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp203 376 380 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp204 ___321_loy $tmp187 	%line{28} %argrw{"wrr"}
	lt		$tmp205 ___321_y $tmp204 	%argrw{"wrr"}
	neq		$tmp206 $tmp205 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp203 $tmp206 	%line{27} %argrw{"wr"}
	neq		$tmp207 $tmp203 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp207 382 386 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp208 ___321_hiy $tmp187 	%line{29} %argrw{"wrr"}
	gt		$tmp209 ___321_y $tmp208 	%argrw{"wrr"}
	neq		$tmp210 $tmp209 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp207 $tmp210 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp207 389 389 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp187 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp211 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp211 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp212 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp212 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp213 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp213 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp214 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp214 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp216 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp216 401 405 	%argrw{"r"}
	assign		$tmp215 ___321_lx 	%argrw{"wr"}
	gt		$tmp217 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp217 404 405 	%argrw{"r"}
	assign		$tmp215 ___321_hx 	%argrw{"wr"}
	assign		$tmp215 $const2 	%argrw{"wr"}
	lt		$tmp219 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp219 408 412 	%argrw{"r"}
	assign		$tmp218 ___321_ly 	%argrw{"wr"}
	gt		$tmp220 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp220 411 412 	%argrw{"r"}
	assign		$tmp218 ___321_hy 	%argrw{"wr"}
	assign		$tmp218 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp215 $tmp218 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp221 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp221 418 418 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp222 Roundness $tmp188 	%line{48} %argrw{"wrr"}
	if		$tmp222 424 445 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp224 Roundness $tmp188 	%line{49} %argrw{"wrr"}
	add		$tmp225 Roundness $tmp188 	%argrw{"wrr"}
	smoothstep	$tmp223 $tmp224 $tmp225 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp223 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp226 ___321_lox $tmp187 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp226 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp227 ___321_loy $tmp187 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp227 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp228 ___321_hix $tmp187 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp228 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp229 ___321_hiy $tmp187 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp229 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp230 $tmp188 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp230 $tmp188 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp232 $tmp188 	%line{59} %argrw{"wr"}
	neg		$tmp233 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp231 $tmp232 $tmp188 $tmp233 	%argrw{"wrrr"}
	mul		Bump Bump $tmp231 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp235 $tmp188 	%line{60} %argrw{"wr"}
	smoothstep	$tmp234 $tmp235 $tmp188 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp234 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp237 $tmp188 	%line{61} %argrw{"wr"}
	neg		$tmp238 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp236 $tmp237 $tmp188 $tmp238 	%argrw{"wrrr"}
	mul		Bump Bump $tmp236 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const10 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:183
# 					Tile = doRect(0.5 ,1.0, 0.0, 0.5, 2, 3, Roundness, PARAM);
	eq		$tmp239 Tile $const1 	%line{183} %argrw{"wrr"}
	if		$tmp239 553 553 	%argrw{"r"}
# OSL\SimpleTiles.osl:184
# 				if (Tile == 0) 
	assign		$tmp241 ___323_xx 	%line{184} %argrw{"wr"}
	assign		$tmp242 ___324_yy 	%argrw{"wr"}
	point		$tmp240 $tmp241 $tmp242 $const2 	%argrw{"wrrr"}
	add		$tmp243 fluvw $tmp240 	%argrw{"wrr"}
	mul		$tmp244 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp245 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 553 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp246 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp247 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp246 $tmp247 	%argrw{"wrr"}
	compref		$tmp248 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp249 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp248 $tmp249 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp250 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const4 $tmp250 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp251 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp251 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp252 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp252 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp253 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const4 $tmp253 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp254 ___321_lox $tmp244 	%line{26} %argrw{"wrr"}
	lt		$tmp255 ___321_x $tmp254 	%argrw{"wrr"}
	neq		$tmp256 $tmp255 $const1 	%argrw{"wrr"}
	if		$tmp256 475 479 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp257 ___321_hix $tmp244 	%line{27} %argrw{"wrr"}
	gt		$tmp258 ___321_x $tmp257 	%argrw{"wrr"}
	neq		$tmp259 $tmp258 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp256 $tmp259 	%line{26} %argrw{"wr"}
	neq		$tmp260 $tmp256 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp260 481 485 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp261 ___321_loy $tmp244 	%line{28} %argrw{"wrr"}
	lt		$tmp262 ___321_y $tmp261 	%argrw{"wrr"}
	neq		$tmp263 $tmp262 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp260 $tmp263 	%line{27} %argrw{"wr"}
	neq		$tmp264 $tmp260 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp264 487 491 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp265 ___321_hiy $tmp244 	%line{29} %argrw{"wrr"}
	gt		$tmp266 ___321_y $tmp265 	%argrw{"wrr"}
	neq		$tmp267 $tmp266 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp264 $tmp267 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp264 494 494 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp244 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp268 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp268 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp269 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp269 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp270 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp270 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp271 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp271 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp273 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp273 506 510 	%argrw{"r"}
	assign		$tmp272 ___321_lx 	%argrw{"wr"}
	gt		$tmp274 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp274 509 510 	%argrw{"r"}
	assign		$tmp272 ___321_hx 	%argrw{"wr"}
	assign		$tmp272 $const2 	%argrw{"wr"}
	lt		$tmp276 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp276 513 517 	%argrw{"r"}
	assign		$tmp275 ___321_ly 	%argrw{"wr"}
	gt		$tmp277 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp277 516 517 	%argrw{"r"}
	assign		$tmp275 ___321_hy 	%argrw{"wr"}
	assign		$tmp275 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp272 $tmp275 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp278 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp278 523 523 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp279 Roundness $tmp245 	%line{48} %argrw{"wrr"}
	if		$tmp279 529 550 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp281 Roundness $tmp245 	%line{49} %argrw{"wrr"}
	add		$tmp282 Roundness $tmp245 	%argrw{"wrr"}
	smoothstep	$tmp280 $tmp281 $tmp282 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp280 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp283 ___321_lox $tmp244 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp283 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp284 ___321_loy $tmp244 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp284 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp285 ___321_hix $tmp244 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp285 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp286 ___321_hiy $tmp244 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp286 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp287 $tmp245 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp287 $tmp245 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp289 $tmp245 	%line{59} %argrw{"wr"}
	neg		$tmp290 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp288 $tmp289 $tmp245 $tmp290 	%argrw{"wrrr"}
	mul		Bump Bump $tmp288 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp292 $tmp245 	%line{60} %argrw{"wr"}
	smoothstep	$tmp291 $tmp292 $tmp245 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp291 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp294 $tmp245 	%line{61} %argrw{"wr"}
	neg		$tmp295 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp293 $tmp294 $tmp245 $tmp295 	%argrw{"wrrr"}
	mul		Bump Bump $tmp293 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const11 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:185
# 					Tile = doRect(0.5, 1.0, 0.5, 1.0, 1, 4, Roundness, PARAM);
	eq		$tmp296 Tile $const1 	%line{185} %argrw{"wrr"}
	if		$tmp296 658 658 	%argrw{"r"}
# OSL\SimpleTiles.osl:186
# 			}
	assign		$tmp298 ___323_xx 	%line{186} %argrw{"wr"}
	assign		$tmp299 ___324_yy 	%argrw{"wr"}
	point		$tmp297 $tmp298 $tmp299 $const2 	%argrw{"wrrr"}
	add		$tmp300 fluvw $tmp297 	%argrw{"wrr"}
	mul		$tmp301 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp302 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 658 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp303 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp304 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp303 $tmp304 	%argrw{"wrr"}
	compref		$tmp305 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp306 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp305 $tmp306 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp307 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const4 $tmp307 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp308 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp308 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp309 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp309 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp310 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp310 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp311 ___321_lox $tmp301 	%line{26} %argrw{"wrr"}
	lt		$tmp312 ___321_x $tmp311 	%argrw{"wrr"}
	neq		$tmp313 $tmp312 $const1 	%argrw{"wrr"}
	if		$tmp313 580 584 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp314 ___321_hix $tmp301 	%line{27} %argrw{"wrr"}
	gt		$tmp315 ___321_x $tmp314 	%argrw{"wrr"}
	neq		$tmp316 $tmp315 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp313 $tmp316 	%line{26} %argrw{"wr"}
	neq		$tmp317 $tmp313 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp317 586 590 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp318 ___321_loy $tmp301 	%line{28} %argrw{"wrr"}
	lt		$tmp319 ___321_y $tmp318 	%argrw{"wrr"}
	neq		$tmp320 $tmp319 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp317 $tmp320 	%line{27} %argrw{"wr"}
	neq		$tmp321 $tmp317 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp321 592 596 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp322 ___321_hiy $tmp301 	%line{29} %argrw{"wrr"}
	gt		$tmp323 ___321_y $tmp322 	%argrw{"wrr"}
	neq		$tmp324 $tmp323 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp321 $tmp324 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp321 599 599 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp301 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp325 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp325 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp326 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp326 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp327 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp327 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp328 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp328 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp330 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp330 611 615 	%argrw{"r"}
	assign		$tmp329 ___321_lx 	%argrw{"wr"}
	gt		$tmp331 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp331 614 615 	%argrw{"r"}
	assign		$tmp329 ___321_hx 	%argrw{"wr"}
	assign		$tmp329 $const2 	%argrw{"wr"}
	lt		$tmp333 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp333 618 622 	%argrw{"r"}
	assign		$tmp332 ___321_ly 	%argrw{"wr"}
	gt		$tmp334 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp334 621 622 	%argrw{"r"}
	assign		$tmp332 ___321_hy 	%argrw{"wr"}
	assign		$tmp332 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp329 $tmp332 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp335 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp335 628 628 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp336 Roundness $tmp302 	%line{48} %argrw{"wrr"}
	if		$tmp336 634 655 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp338 Roundness $tmp302 	%line{49} %argrw{"wrr"}
	add		$tmp339 Roundness $tmp302 	%argrw{"wrr"}
	smoothstep	$tmp337 $tmp338 $tmp339 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp337 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp340 ___321_lox $tmp301 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp340 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp341 ___321_loy $tmp301 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp341 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp342 ___321_hix $tmp301 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp342 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp343 ___321_hiy $tmp301 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp343 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp344 $tmp302 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp344 $tmp302 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp346 $tmp302 	%line{59} %argrw{"wr"}
	neg		$tmp347 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp345 $tmp346 $tmp302 $tmp347 	%argrw{"wrrr"}
	mul		Bump Bump $tmp345 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp349 $tmp302 	%line{60} %argrw{"wr"}
	smoothstep	$tmp348 $tmp349 $tmp302 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp348 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp351 $tmp302 	%line{61} %argrw{"wr"}
	neg		$tmp352 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp350 $tmp351 $tmp302 $tmp352 	%argrw{"wrrr"}
	mul		Bump Bump $tmp350 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const12 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:189
# 			{
	eq		$tmp353 TileMode $const10 	%line{189} %argrw{"wrr"}
	if		$tmp353 979 979 	%argrw{"r"}
# OSL\SimpleTiles.osl:191
# 					Tile = doRect(0.0 ,1.0, 0.0, 0.5, 1, 1, Roundness, PARAM);
	eq		$tmp354 Tile $const1 	%line{191} %argrw{"wrr"}
	if		$tmp354 765 765 	%argrw{"r"}
# OSL\SimpleTiles.osl:192
# 				if (Tile == 0) 
	assign		$tmp356 ___323_xx 	%line{192} %argrw{"wr"}
	assign		$tmp357 ___324_yy 	%argrw{"wr"}
	point		$tmp355 $tmp356 $tmp357 $const2 	%argrw{"wrrr"}
	add		$tmp358 fluvw $tmp355 	%argrw{"wrr"}
	mul		$tmp359 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp360 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 765 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp361 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp362 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp361 $tmp362 	%argrw{"wrr"}
	compref		$tmp363 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp364 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp363 $tmp364 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp365 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp365 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp366 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp366 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp367 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp367 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp368 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const4 $tmp368 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp369 ___321_lox $tmp359 	%line{26} %argrw{"wrr"}
	lt		$tmp370 ___321_x $tmp369 	%argrw{"wrr"}
	neq		$tmp371 $tmp370 $const1 	%argrw{"wrr"}
	if		$tmp371 687 691 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp372 ___321_hix $tmp359 	%line{27} %argrw{"wrr"}
	gt		$tmp373 ___321_x $tmp372 	%argrw{"wrr"}
	neq		$tmp374 $tmp373 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp371 $tmp374 	%line{26} %argrw{"wr"}
	neq		$tmp375 $tmp371 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp375 693 697 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp376 ___321_loy $tmp359 	%line{28} %argrw{"wrr"}
	lt		$tmp377 ___321_y $tmp376 	%argrw{"wrr"}
	neq		$tmp378 $tmp377 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp375 $tmp378 	%line{27} %argrw{"wr"}
	neq		$tmp379 $tmp375 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp379 699 703 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp380 ___321_hiy $tmp359 	%line{29} %argrw{"wrr"}
	gt		$tmp381 ___321_y $tmp380 	%argrw{"wrr"}
	neq		$tmp382 $tmp381 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp379 $tmp382 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp379 706 706 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp359 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp383 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp383 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp384 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp384 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp385 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp385 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp386 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp386 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp388 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp388 718 722 	%argrw{"r"}
	assign		$tmp387 ___321_lx 	%argrw{"wr"}
	gt		$tmp389 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp389 721 722 	%argrw{"r"}
	assign		$tmp387 ___321_hx 	%argrw{"wr"}
	assign		$tmp387 $const2 	%argrw{"wr"}
	lt		$tmp391 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp391 725 729 	%argrw{"r"}
	assign		$tmp390 ___321_ly 	%argrw{"wr"}
	gt		$tmp392 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp392 728 729 	%argrw{"r"}
	assign		$tmp390 ___321_hy 	%argrw{"wr"}
	assign		$tmp390 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp387 $tmp390 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp393 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp393 735 735 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp394 Roundness $tmp360 	%line{48} %argrw{"wrr"}
	if		$tmp394 741 762 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp396 Roundness $tmp360 	%line{49} %argrw{"wrr"}
	add		$tmp397 Roundness $tmp360 	%argrw{"wrr"}
	smoothstep	$tmp395 $tmp396 $tmp397 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp395 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp398 ___321_lox $tmp359 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp398 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp399 ___321_loy $tmp359 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp399 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp400 ___321_hix $tmp359 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp400 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp401 ___321_hiy $tmp359 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp401 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp402 $tmp360 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp402 $tmp360 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp404 $tmp360 	%line{59} %argrw{"wr"}
	neg		$tmp405 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp403 $tmp404 $tmp360 $tmp405 	%argrw{"wrrr"}
	mul		Bump Bump $tmp403 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp407 $tmp360 	%line{60} %argrw{"wr"}
	smoothstep	$tmp406 $tmp407 $tmp360 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp406 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp409 $tmp360 	%line{61} %argrw{"wr"}
	neg		$tmp410 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp408 $tmp409 $tmp360 $tmp410 	%argrw{"wrrr"}
	mul		Bump Bump $tmp408 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const3 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:193
# 					Tile = doRect(0.0+to2, 0.5+to2, 0.5, 1.0, 2, 2, Roundness, PARAM);
	eq		$tmp411 Tile $const1 	%line{193} %argrw{"wrr"}
	if		$tmp411 872 872 	%argrw{"r"}
# OSL\SimpleTiles.osl:194
# 				if (Tile == 0) 
	add		$tmp412 $const2 to2 	%line{194} %argrw{"wrr"}
	add		$tmp413 $const4 to2 	%argrw{"wrr"}
	assign		$tmp415 ___323_xx 	%argrw{"wr"}
	assign		$tmp416 ___324_yy 	%argrw{"wr"}
	point		$tmp414 $tmp415 $tmp416 $const2 	%argrw{"wrrr"}
	add		$tmp417 fluvw $tmp414 	%argrw{"wrr"}
	mul		$tmp418 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp419 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 872 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp420 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp421 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp420 $tmp421 	%argrw{"wrr"}
	compref		$tmp422 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp423 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp422 $tmp423 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp424 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp412 $tmp424 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp425 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp413 $tmp425 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp426 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp426 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp427 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp427 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp428 ___321_lox $tmp418 	%line{26} %argrw{"wrr"}
	lt		$tmp429 ___321_x $tmp428 	%argrw{"wrr"}
	neq		$tmp430 $tmp429 $const1 	%argrw{"wrr"}
	if		$tmp430 794 798 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp431 ___321_hix $tmp418 	%line{27} %argrw{"wrr"}
	gt		$tmp432 ___321_x $tmp431 	%argrw{"wrr"}
	neq		$tmp433 $tmp432 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp430 $tmp433 	%line{26} %argrw{"wr"}
	neq		$tmp434 $tmp430 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp434 800 804 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp435 ___321_loy $tmp418 	%line{28} %argrw{"wrr"}
	lt		$tmp436 ___321_y $tmp435 	%argrw{"wrr"}
	neq		$tmp437 $tmp436 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp434 $tmp437 	%line{27} %argrw{"wr"}
	neq		$tmp438 $tmp434 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp438 806 810 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp439 ___321_hiy $tmp418 	%line{29} %argrw{"wrr"}
	gt		$tmp440 ___321_y $tmp439 	%argrw{"wrr"}
	neq		$tmp441 $tmp440 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp438 $tmp441 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp438 813 813 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp418 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp442 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp442 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp443 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp443 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp444 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp444 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp445 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp445 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp447 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp447 825 829 	%argrw{"r"}
	assign		$tmp446 ___321_lx 	%argrw{"wr"}
	gt		$tmp448 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp448 828 829 	%argrw{"r"}
	assign		$tmp446 ___321_hx 	%argrw{"wr"}
	assign		$tmp446 $const2 	%argrw{"wr"}
	lt		$tmp450 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp450 832 836 	%argrw{"r"}
	assign		$tmp449 ___321_ly 	%argrw{"wr"}
	gt		$tmp451 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp451 835 836 	%argrw{"r"}
	assign		$tmp449 ___321_hy 	%argrw{"wr"}
	assign		$tmp449 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp446 $tmp449 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp452 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp452 842 842 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp453 Roundness $tmp419 	%line{48} %argrw{"wrr"}
	if		$tmp453 848 869 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp455 Roundness $tmp419 	%line{49} %argrw{"wrr"}
	add		$tmp456 Roundness $tmp419 	%argrw{"wrr"}
	smoothstep	$tmp454 $tmp455 $tmp456 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp454 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp457 ___321_lox $tmp418 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp457 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp458 ___321_loy $tmp418 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp458 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp459 ___321_hix $tmp418 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp459 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp460 ___321_hiy $tmp418 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp460 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp461 $tmp419 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp461 $tmp419 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp463 $tmp419 	%line{59} %argrw{"wr"}
	neg		$tmp464 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp462 $tmp463 $tmp419 $tmp464 	%argrw{"wrrr"}
	mul		Bump Bump $tmp462 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp466 $tmp419 	%line{60} %argrw{"wr"}
	smoothstep	$tmp465 $tmp466 $tmp419 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp465 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp468 $tmp419 	%line{61} %argrw{"wr"}
	neg		$tmp469 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp467 $tmp468 $tmp419 $tmp469 	%argrw{"wrrr"}
	mul		Bump Bump $tmp467 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const10 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:195
# 					Tile = doRect(0.5+to2, 1.0+to2, 0.5, 1.0, 2, 3, Roundness, PARAM);
	eq		$tmp470 Tile $const1 	%line{195} %argrw{"wrr"}
	if		$tmp470 979 979 	%argrw{"r"}
# OSL\SimpleTiles.osl:196
# 			}
	add		$tmp471 $const4 to2 	%line{196} %argrw{"wrr"}
	add		$tmp472 $const6 to2 	%argrw{"wrr"}
	assign		$tmp474 ___323_xx 	%argrw{"wr"}
	assign		$tmp475 ___324_yy 	%argrw{"wr"}
	point		$tmp473 $tmp474 $tmp475 $const2 	%argrw{"wrrr"}
	add		$tmp476 fluvw $tmp473 	%argrw{"wrr"}
	mul		$tmp477 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp478 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 979 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp479 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp480 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp479 $tmp480 	%argrw{"wrr"}
	compref		$tmp481 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp482 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp481 $tmp482 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp483 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp471 $tmp483 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp484 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp472 $tmp484 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp485 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp485 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp486 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp486 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp487 ___321_lox $tmp477 	%line{26} %argrw{"wrr"}
	lt		$tmp488 ___321_x $tmp487 	%argrw{"wrr"}
	neq		$tmp489 $tmp488 $const1 	%argrw{"wrr"}
	if		$tmp489 901 905 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp490 ___321_hix $tmp477 	%line{27} %argrw{"wrr"}
	gt		$tmp491 ___321_x $tmp490 	%argrw{"wrr"}
	neq		$tmp492 $tmp491 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp489 $tmp492 	%line{26} %argrw{"wr"}
	neq		$tmp493 $tmp489 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp493 907 911 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp494 ___321_loy $tmp477 	%line{28} %argrw{"wrr"}
	lt		$tmp495 ___321_y $tmp494 	%argrw{"wrr"}
	neq		$tmp496 $tmp495 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp493 $tmp496 	%line{27} %argrw{"wr"}
	neq		$tmp497 $tmp493 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp497 913 917 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp498 ___321_hiy $tmp477 	%line{29} %argrw{"wrr"}
	gt		$tmp499 ___321_y $tmp498 	%argrw{"wrr"}
	neq		$tmp500 $tmp499 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp497 $tmp500 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp497 920 920 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp477 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp501 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp501 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp502 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp502 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp503 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp503 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp504 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp504 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp506 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp506 932 936 	%argrw{"r"}
	assign		$tmp505 ___321_lx 	%argrw{"wr"}
	gt		$tmp507 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp507 935 936 	%argrw{"r"}
	assign		$tmp505 ___321_hx 	%argrw{"wr"}
	assign		$tmp505 $const2 	%argrw{"wr"}
	lt		$tmp509 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp509 939 943 	%argrw{"r"}
	assign		$tmp508 ___321_ly 	%argrw{"wr"}
	gt		$tmp510 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp510 942 943 	%argrw{"r"}
	assign		$tmp508 ___321_hy 	%argrw{"wr"}
	assign		$tmp508 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp505 $tmp508 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp511 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp511 949 949 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp512 Roundness $tmp478 	%line{48} %argrw{"wrr"}
	if		$tmp512 955 976 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp514 Roundness $tmp478 	%line{49} %argrw{"wrr"}
	add		$tmp515 Roundness $tmp478 	%argrw{"wrr"}
	smoothstep	$tmp513 $tmp514 $tmp515 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp513 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp516 ___321_lox $tmp477 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp516 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp517 ___321_loy $tmp477 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp517 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp518 ___321_hix $tmp477 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp518 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp519 ___321_hiy $tmp477 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp519 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp520 $tmp478 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp520 $tmp478 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp522 $tmp478 	%line{59} %argrw{"wr"}
	neg		$tmp523 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp521 $tmp522 $tmp478 $tmp523 	%argrw{"wrrr"}
	mul		Bump Bump $tmp521 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp525 $tmp478 	%line{60} %argrw{"wr"}
	smoothstep	$tmp524 $tmp525 $tmp478 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp524 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp527 $tmp478 	%line{61} %argrw{"wr"}
	neg		$tmp528 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp526 $tmp527 $tmp478 $tmp528 	%argrw{"wrrr"}
	mul		Bump Bump $tmp526 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const11 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:199
# 			{
	eq		$tmp529 TileMode $const11 	%line{199} %argrw{"wrr"}
	if		$tmp529 1514 1514 	%argrw{"r"}
# OSL\SimpleTiles.osl:201
# 					Tile = doRect(0.0 ,1.0, 0.0, 0.5, 1, 1, Roundness, PARAM);
	eq		$tmp530 Tile $const1 	%line{201} %argrw{"wrr"}
	if		$tmp530 1086 1086 	%argrw{"r"}
# OSL\SimpleTiles.osl:202
# 				if (Tile == 0) 
	assign		$tmp532 ___323_xx 	%line{202} %argrw{"wr"}
	assign		$tmp533 ___324_yy 	%argrw{"wr"}
	point		$tmp531 $tmp532 $tmp533 $const2 	%argrw{"wrrr"}
	add		$tmp534 fluvw $tmp531 	%argrw{"wrr"}
	mul		$tmp535 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp536 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1086 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp537 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp538 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp537 $tmp538 	%argrw{"wrr"}
	compref		$tmp539 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp540 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp539 $tmp540 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp541 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp541 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp542 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp542 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp543 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp543 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp544 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const4 $tmp544 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp545 ___321_lox $tmp535 	%line{26} %argrw{"wrr"}
	lt		$tmp546 ___321_x $tmp545 	%argrw{"wrr"}
	neq		$tmp547 $tmp546 $const1 	%argrw{"wrr"}
	if		$tmp547 1008 1012 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp548 ___321_hix $tmp535 	%line{27} %argrw{"wrr"}
	gt		$tmp549 ___321_x $tmp548 	%argrw{"wrr"}
	neq		$tmp550 $tmp549 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp547 $tmp550 	%line{26} %argrw{"wr"}
	neq		$tmp551 $tmp547 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp551 1014 1018 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp552 ___321_loy $tmp535 	%line{28} %argrw{"wrr"}
	lt		$tmp553 ___321_y $tmp552 	%argrw{"wrr"}
	neq		$tmp554 $tmp553 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp551 $tmp554 	%line{27} %argrw{"wr"}
	neq		$tmp555 $tmp551 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp555 1020 1024 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp556 ___321_hiy $tmp535 	%line{29} %argrw{"wrr"}
	gt		$tmp557 ___321_y $tmp556 	%argrw{"wrr"}
	neq		$tmp558 $tmp557 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp555 $tmp558 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp555 1027 1027 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp535 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp559 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp559 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp560 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp560 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp561 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp561 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp562 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp562 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp564 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp564 1039 1043 	%argrw{"r"}
	assign		$tmp563 ___321_lx 	%argrw{"wr"}
	gt		$tmp565 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp565 1042 1043 	%argrw{"r"}
	assign		$tmp563 ___321_hx 	%argrw{"wr"}
	assign		$tmp563 $const2 	%argrw{"wr"}
	lt		$tmp567 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp567 1046 1050 	%argrw{"r"}
	assign		$tmp566 ___321_ly 	%argrw{"wr"}
	gt		$tmp568 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp568 1049 1050 	%argrw{"r"}
	assign		$tmp566 ___321_hy 	%argrw{"wr"}
	assign		$tmp566 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp563 $tmp566 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp569 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp569 1056 1056 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp570 Roundness $tmp536 	%line{48} %argrw{"wrr"}
	if		$tmp570 1062 1083 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp572 Roundness $tmp536 	%line{49} %argrw{"wrr"}
	add		$tmp573 Roundness $tmp536 	%argrw{"wrr"}
	smoothstep	$tmp571 $tmp572 $tmp573 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp571 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp574 ___321_lox $tmp535 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp574 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp575 ___321_loy $tmp535 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp575 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp576 ___321_hix $tmp535 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp576 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp577 ___321_hiy $tmp535 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp577 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp578 $tmp536 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp578 $tmp536 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp580 $tmp536 	%line{59} %argrw{"wr"}
	neg		$tmp581 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp579 $tmp580 $tmp536 $tmp581 	%argrw{"wrrr"}
	mul		Bump Bump $tmp579 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp583 $tmp536 	%line{60} %argrw{"wr"}
	smoothstep	$tmp582 $tmp583 $tmp536 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp582 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp585 $tmp536 	%line{61} %argrw{"wr"}
	neg		$tmp586 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp584 $tmp585 $tmp536 $tmp586 	%argrw{"wrrr"}
	mul		Bump Bump $tmp584 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const3 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:203
# 					Tile = doRect(0.0+to, 0.5+to, 0.5, 0.75, 2, 2, Roundness, PARAM);
	eq		$tmp587 Tile $const1 	%line{203} %argrw{"wrr"}
	if		$tmp587 1193 1193 	%argrw{"r"}
# OSL\SimpleTiles.osl:204
# 				if (Tile == 0) 
	add		$tmp588 $const2 to 	%line{204} %argrw{"wrr"}
	add		$tmp589 $const4 to 	%argrw{"wrr"}
	assign		$tmp591 ___323_xx 	%argrw{"wr"}
	assign		$tmp592 ___324_yy 	%argrw{"wr"}
	point		$tmp590 $tmp591 $tmp592 $const2 	%argrw{"wrrr"}
	add		$tmp593 fluvw $tmp590 	%argrw{"wrr"}
	mul		$tmp594 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp595 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1193 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp596 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp597 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp596 $tmp597 	%argrw{"wrr"}
	compref		$tmp598 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp599 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp598 $tmp599 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp600 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp588 $tmp600 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp601 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp589 $tmp601 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp602 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp602 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp603 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const13 $tmp603 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp604 ___321_lox $tmp594 	%line{26} %argrw{"wrr"}
	lt		$tmp605 ___321_x $tmp604 	%argrw{"wrr"}
	neq		$tmp606 $tmp605 $const1 	%argrw{"wrr"}
	if		$tmp606 1115 1119 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp607 ___321_hix $tmp594 	%line{27} %argrw{"wrr"}
	gt		$tmp608 ___321_x $tmp607 	%argrw{"wrr"}
	neq		$tmp609 $tmp608 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp606 $tmp609 	%line{26} %argrw{"wr"}
	neq		$tmp610 $tmp606 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp610 1121 1125 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp611 ___321_loy $tmp594 	%line{28} %argrw{"wrr"}
	lt		$tmp612 ___321_y $tmp611 	%argrw{"wrr"}
	neq		$tmp613 $tmp612 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp610 $tmp613 	%line{27} %argrw{"wr"}
	neq		$tmp614 $tmp610 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp614 1127 1131 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp615 ___321_hiy $tmp594 	%line{29} %argrw{"wrr"}
	gt		$tmp616 ___321_y $tmp615 	%argrw{"wrr"}
	neq		$tmp617 $tmp616 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp614 $tmp617 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp614 1134 1134 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp594 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp618 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp618 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp619 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp619 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp620 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp620 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp621 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp621 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp623 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp623 1146 1150 	%argrw{"r"}
	assign		$tmp622 ___321_lx 	%argrw{"wr"}
	gt		$tmp624 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp624 1149 1150 	%argrw{"r"}
	assign		$tmp622 ___321_hx 	%argrw{"wr"}
	assign		$tmp622 $const2 	%argrw{"wr"}
	lt		$tmp626 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp626 1153 1157 	%argrw{"r"}
	assign		$tmp625 ___321_ly 	%argrw{"wr"}
	gt		$tmp627 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp627 1156 1157 	%argrw{"r"}
	assign		$tmp625 ___321_hy 	%argrw{"wr"}
	assign		$tmp625 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp622 $tmp625 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp628 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp628 1163 1163 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp629 Roundness $tmp595 	%line{48} %argrw{"wrr"}
	if		$tmp629 1169 1190 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp631 Roundness $tmp595 	%line{49} %argrw{"wrr"}
	add		$tmp632 Roundness $tmp595 	%argrw{"wrr"}
	smoothstep	$tmp630 $tmp631 $tmp632 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp630 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp633 ___321_lox $tmp594 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp633 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp634 ___321_loy $tmp594 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp634 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp635 ___321_hix $tmp594 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp635 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp636 ___321_hiy $tmp594 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp636 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp637 $tmp595 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp637 $tmp595 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp639 $tmp595 	%line{59} %argrw{"wr"}
	neg		$tmp640 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp638 $tmp639 $tmp595 $tmp640 	%argrw{"wrrr"}
	mul		Bump Bump $tmp638 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp642 $tmp595 	%line{60} %argrw{"wr"}
	smoothstep	$tmp641 $tmp642 $tmp595 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp641 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp644 $tmp595 	%line{61} %argrw{"wr"}
	neg		$tmp645 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp643 $tmp644 $tmp595 $tmp645 	%argrw{"wrrr"}
	mul		Bump Bump $tmp643 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const10 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:205
# 					Tile = doRect(0.5+to, 1.0+to, 0.5, 0.75, 2, 3, Roundness, PARAM);
	eq		$tmp646 Tile $const1 	%line{205} %argrw{"wrr"}
	if		$tmp646 1300 1300 	%argrw{"r"}
# OSL\SimpleTiles.osl:206
# 				if (Tile == 0) 
	add		$tmp647 $const4 to 	%line{206} %argrw{"wrr"}
	add		$tmp648 $const6 to 	%argrw{"wrr"}
	assign		$tmp650 ___323_xx 	%argrw{"wr"}
	assign		$tmp651 ___324_yy 	%argrw{"wr"}
	point		$tmp649 $tmp650 $tmp651 $const2 	%argrw{"wrrr"}
	add		$tmp652 fluvw $tmp649 	%argrw{"wrr"}
	mul		$tmp653 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp654 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1300 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp655 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp656 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp655 $tmp656 	%argrw{"wrr"}
	compref		$tmp657 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp658 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp657 $tmp658 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp659 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp647 $tmp659 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp660 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp648 $tmp660 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp661 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const4 $tmp661 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp662 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const13 $tmp662 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp663 ___321_lox $tmp653 	%line{26} %argrw{"wrr"}
	lt		$tmp664 ___321_x $tmp663 	%argrw{"wrr"}
	neq		$tmp665 $tmp664 $const1 	%argrw{"wrr"}
	if		$tmp665 1222 1226 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp666 ___321_hix $tmp653 	%line{27} %argrw{"wrr"}
	gt		$tmp667 ___321_x $tmp666 	%argrw{"wrr"}
	neq		$tmp668 $tmp667 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp665 $tmp668 	%line{26} %argrw{"wr"}
	neq		$tmp669 $tmp665 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp669 1228 1232 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp670 ___321_loy $tmp653 	%line{28} %argrw{"wrr"}
	lt		$tmp671 ___321_y $tmp670 	%argrw{"wrr"}
	neq		$tmp672 $tmp671 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp669 $tmp672 	%line{27} %argrw{"wr"}
	neq		$tmp673 $tmp669 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp673 1234 1238 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp674 ___321_hiy $tmp653 	%line{29} %argrw{"wrr"}
	gt		$tmp675 ___321_y $tmp674 	%argrw{"wrr"}
	neq		$tmp676 $tmp675 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp673 $tmp676 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp673 1241 1241 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp653 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp677 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp677 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp678 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp678 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp679 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp679 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp680 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp680 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp682 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp682 1253 1257 	%argrw{"r"}
	assign		$tmp681 ___321_lx 	%argrw{"wr"}
	gt		$tmp683 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp683 1256 1257 	%argrw{"r"}
	assign		$tmp681 ___321_hx 	%argrw{"wr"}
	assign		$tmp681 $const2 	%argrw{"wr"}
	lt		$tmp685 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp685 1260 1264 	%argrw{"r"}
	assign		$tmp684 ___321_ly 	%argrw{"wr"}
	gt		$tmp686 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp686 1263 1264 	%argrw{"r"}
	assign		$tmp684 ___321_hy 	%argrw{"wr"}
	assign		$tmp684 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp681 $tmp684 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp687 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp687 1270 1270 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp688 Roundness $tmp654 	%line{48} %argrw{"wrr"}
	if		$tmp688 1276 1297 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp690 Roundness $tmp654 	%line{49} %argrw{"wrr"}
	add		$tmp691 Roundness $tmp654 	%argrw{"wrr"}
	smoothstep	$tmp689 $tmp690 $tmp691 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp689 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp692 ___321_lox $tmp653 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp692 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp693 ___321_loy $tmp653 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp693 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp694 ___321_hix $tmp653 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp694 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp695 ___321_hiy $tmp653 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp695 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp696 $tmp654 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp696 $tmp654 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp698 $tmp654 	%line{59} %argrw{"wr"}
	neg		$tmp699 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp697 $tmp698 $tmp654 $tmp699 	%argrw{"wrrr"}
	mul		Bump Bump $tmp697 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp701 $tmp654 	%line{60} %argrw{"wr"}
	smoothstep	$tmp700 $tmp701 $tmp654 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp700 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp703 $tmp654 	%line{61} %argrw{"wr"}
	neg		$tmp704 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp702 $tmp703 $tmp654 $tmp704 	%argrw{"wrrr"}
	mul		Bump Bump $tmp702 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const11 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:207
# 					Tile = doRect(0.0+to2, 0.5+to2, 0.75, 1.0, 3, 4, Roundness, PARAM);
	eq		$tmp705 Tile $const1 	%line{207} %argrw{"wrr"}
	if		$tmp705 1407 1407 	%argrw{"r"}
# OSL\SimpleTiles.osl:208
# 				if (Tile == 0) 
	add		$tmp706 $const2 to2 	%line{208} %argrw{"wrr"}
	add		$tmp707 $const4 to2 	%argrw{"wrr"}
	assign		$tmp709 ___323_xx 	%argrw{"wr"}
	assign		$tmp710 ___324_yy 	%argrw{"wr"}
	point		$tmp708 $tmp709 $tmp710 $const2 	%argrw{"wrrr"}
	add		$tmp711 fluvw $tmp708 	%argrw{"wrr"}
	mul		$tmp712 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp713 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1407 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp714 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp715 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp714 $tmp715 	%argrw{"wrr"}
	compref		$tmp716 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp717 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp716 $tmp717 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp718 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp706 $tmp718 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp719 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp707 $tmp719 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp720 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const13 $tmp720 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp721 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp721 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp722 ___321_lox $tmp712 	%line{26} %argrw{"wrr"}
	lt		$tmp723 ___321_x $tmp722 	%argrw{"wrr"}
	neq		$tmp724 $tmp723 $const1 	%argrw{"wrr"}
	if		$tmp724 1329 1333 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp725 ___321_hix $tmp712 	%line{27} %argrw{"wrr"}
	gt		$tmp726 ___321_x $tmp725 	%argrw{"wrr"}
	neq		$tmp727 $tmp726 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp724 $tmp727 	%line{26} %argrw{"wr"}
	neq		$tmp728 $tmp724 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp728 1335 1339 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp729 ___321_loy $tmp712 	%line{28} %argrw{"wrr"}
	lt		$tmp730 ___321_y $tmp729 	%argrw{"wrr"}
	neq		$tmp731 $tmp730 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp728 $tmp731 	%line{27} %argrw{"wr"}
	neq		$tmp732 $tmp728 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp732 1341 1345 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp733 ___321_hiy $tmp712 	%line{29} %argrw{"wrr"}
	gt		$tmp734 ___321_y $tmp733 	%argrw{"wrr"}
	neq		$tmp735 $tmp734 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp732 $tmp735 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp732 1348 1348 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp712 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp736 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp736 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp737 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp737 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp738 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp738 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp739 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp739 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp741 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp741 1360 1364 	%argrw{"r"}
	assign		$tmp740 ___321_lx 	%argrw{"wr"}
	gt		$tmp742 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp742 1363 1364 	%argrw{"r"}
	assign		$tmp740 ___321_hx 	%argrw{"wr"}
	assign		$tmp740 $const2 	%argrw{"wr"}
	lt		$tmp744 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp744 1367 1371 	%argrw{"r"}
	assign		$tmp743 ___321_ly 	%argrw{"wr"}
	gt		$tmp745 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp745 1370 1371 	%argrw{"r"}
	assign		$tmp743 ___321_hy 	%argrw{"wr"}
	assign		$tmp743 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp740 $tmp743 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp746 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp746 1377 1377 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp747 Roundness $tmp713 	%line{48} %argrw{"wrr"}
	if		$tmp747 1383 1404 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp749 Roundness $tmp713 	%line{49} %argrw{"wrr"}
	add		$tmp750 Roundness $tmp713 	%argrw{"wrr"}
	smoothstep	$tmp748 $tmp749 $tmp750 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp748 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp751 ___321_lox $tmp712 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp751 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp752 ___321_loy $tmp712 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp752 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp753 ___321_hix $tmp712 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp753 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp754 ___321_hiy $tmp712 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp754 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp755 $tmp713 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp755 $tmp713 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp757 $tmp713 	%line{59} %argrw{"wr"}
	neg		$tmp758 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp756 $tmp757 $tmp713 $tmp758 	%argrw{"wrrr"}
	mul		Bump Bump $tmp756 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp760 $tmp713 	%line{60} %argrw{"wr"}
	smoothstep	$tmp759 $tmp760 $tmp713 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp759 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp762 $tmp713 	%line{61} %argrw{"wr"}
	neg		$tmp763 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp761 $tmp762 $tmp713 $tmp763 	%argrw{"wrrr"}
	mul		Bump Bump $tmp761 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const12 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const11 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:209
# 					Tile = doRect(0.5+to2, 1.0+to2, 0.75, 1.0, 3, 5, Roundness, PARAM);
	eq		$tmp764 Tile $const1 	%line{209} %argrw{"wrr"}
	if		$tmp764 1514 1514 	%argrw{"r"}
# OSL\SimpleTiles.osl:210
# 			}
	add		$tmp765 $const4 to2 	%line{210} %argrw{"wrr"}
	add		$tmp766 $const6 to2 	%argrw{"wrr"}
	assign		$tmp768 ___323_xx 	%argrw{"wr"}
	assign		$tmp769 ___324_yy 	%argrw{"wr"}
	point		$tmp767 $tmp768 $tmp769 $const2 	%argrw{"wrrr"}
	add		$tmp770 fluvw $tmp767 	%argrw{"wrr"}
	mul		$tmp771 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp772 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1514 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp773 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp774 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp773 $tmp774 	%argrw{"wrr"}
	compref		$tmp775 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp776 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp775 $tmp776 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp777 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp765 $tmp777 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp778 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp766 $tmp778 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp779 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const13 $tmp779 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp780 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp780 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp781 ___321_lox $tmp771 	%line{26} %argrw{"wrr"}
	lt		$tmp782 ___321_x $tmp781 	%argrw{"wrr"}
	neq		$tmp783 $tmp782 $const1 	%argrw{"wrr"}
	if		$tmp783 1436 1440 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp784 ___321_hix $tmp771 	%line{27} %argrw{"wrr"}
	gt		$tmp785 ___321_x $tmp784 	%argrw{"wrr"}
	neq		$tmp786 $tmp785 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp783 $tmp786 	%line{26} %argrw{"wr"}
	neq		$tmp787 $tmp783 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp787 1442 1446 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp788 ___321_loy $tmp771 	%line{28} %argrw{"wrr"}
	lt		$tmp789 ___321_y $tmp788 	%argrw{"wrr"}
	neq		$tmp790 $tmp789 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp787 $tmp790 	%line{27} %argrw{"wr"}
	neq		$tmp791 $tmp787 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp791 1448 1452 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp792 ___321_hiy $tmp771 	%line{29} %argrw{"wrr"}
	gt		$tmp793 ___321_y $tmp792 	%argrw{"wrr"}
	neq		$tmp794 $tmp793 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp791 $tmp794 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp791 1455 1455 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp771 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp795 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp795 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp796 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp796 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp797 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp797 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp798 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp798 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp800 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp800 1467 1471 	%argrw{"r"}
	assign		$tmp799 ___321_lx 	%argrw{"wr"}
	gt		$tmp801 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp801 1470 1471 	%argrw{"r"}
	assign		$tmp799 ___321_hx 	%argrw{"wr"}
	assign		$tmp799 $const2 	%argrw{"wr"}
	lt		$tmp803 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp803 1474 1478 	%argrw{"r"}
	assign		$tmp802 ___321_ly 	%argrw{"wr"}
	gt		$tmp804 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp804 1477 1478 	%argrw{"r"}
	assign		$tmp802 ___321_hy 	%argrw{"wr"}
	assign		$tmp802 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp799 $tmp802 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp805 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp805 1484 1484 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp806 Roundness $tmp772 	%line{48} %argrw{"wrr"}
	if		$tmp806 1490 1511 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp808 Roundness $tmp772 	%line{49} %argrw{"wrr"}
	add		$tmp809 Roundness $tmp772 	%argrw{"wrr"}
	smoothstep	$tmp807 $tmp808 $tmp809 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp807 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp810 ___321_lox $tmp771 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp810 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp811 ___321_loy $tmp771 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp811 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp812 ___321_hix $tmp771 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp812 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp813 ___321_hiy $tmp771 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp813 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp814 $tmp772 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp814 $tmp772 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp816 $tmp772 	%line{59} %argrw{"wr"}
	neg		$tmp817 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp815 $tmp816 $tmp772 $tmp817 	%argrw{"wrrr"}
	mul		Bump Bump $tmp815 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp819 $tmp772 	%line{60} %argrw{"wr"}
	smoothstep	$tmp818 $tmp819 $tmp772 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp818 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp821 $tmp772 	%line{61} %argrw{"wr"}
	neg		$tmp822 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp820 $tmp821 $tmp772 $tmp822 	%argrw{"wrrr"}
	mul		Bump Bump $tmp820 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const14 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const11 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:213
# 			{
	eq		$tmp823 TileMode $const12 	%line{213} %argrw{"wrr"}
	if		$tmp823 2047 2047 	%argrw{"r"}
# OSL\SimpleTiles.osl:215
# 					Tile = doRect(0.0, 1.0-to2, 0.0, to2, 1, 1, Roundness, PARAM);
	eq		$tmp824 Tile $const1 	%line{215} %argrw{"wrr"}
	if		$tmp824 1622 1622 	%argrw{"r"}
# OSL\SimpleTiles.osl:216
# 				if (Tile == 0) 
	sub		$tmp825 $const6 to2 	%line{216} %argrw{"wrr"}
	assign		$tmp827 ___323_xx 	%argrw{"wr"}
	assign		$tmp828 ___324_yy 	%argrw{"wr"}
	point		$tmp826 $tmp827 $tmp828 $const2 	%argrw{"wrrr"}
	add		$tmp829 fluvw $tmp826 	%argrw{"wrr"}
	mul		$tmp830 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp831 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1622 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp832 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp833 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp832 $tmp833 	%argrw{"wrr"}
	compref		$tmp834 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp835 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp834 $tmp835 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp836 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp836 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp837 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp825 $tmp837 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp838 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp838 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp839 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy to2 $tmp839 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp840 ___321_lox $tmp830 	%line{26} %argrw{"wrr"}
	lt		$tmp841 ___321_x $tmp840 	%argrw{"wrr"}
	neq		$tmp842 $tmp841 $const1 	%argrw{"wrr"}
	if		$tmp842 1544 1548 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp843 ___321_hix $tmp830 	%line{27} %argrw{"wrr"}
	gt		$tmp844 ___321_x $tmp843 	%argrw{"wrr"}
	neq		$tmp845 $tmp844 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp842 $tmp845 	%line{26} %argrw{"wr"}
	neq		$tmp846 $tmp842 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp846 1550 1554 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp847 ___321_loy $tmp830 	%line{28} %argrw{"wrr"}
	lt		$tmp848 ___321_y $tmp847 	%argrw{"wrr"}
	neq		$tmp849 $tmp848 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp846 $tmp849 	%line{27} %argrw{"wr"}
	neq		$tmp850 $tmp846 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp850 1556 1560 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp851 ___321_hiy $tmp830 	%line{29} %argrw{"wrr"}
	gt		$tmp852 ___321_y $tmp851 	%argrw{"wrr"}
	neq		$tmp853 $tmp852 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp850 $tmp853 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp850 1563 1563 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp830 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp854 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp854 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp855 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp855 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp856 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp856 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp857 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp857 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp859 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp859 1575 1579 	%argrw{"r"}
	assign		$tmp858 ___321_lx 	%argrw{"wr"}
	gt		$tmp860 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp860 1578 1579 	%argrw{"r"}
	assign		$tmp858 ___321_hx 	%argrw{"wr"}
	assign		$tmp858 $const2 	%argrw{"wr"}
	lt		$tmp862 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp862 1582 1586 	%argrw{"r"}
	assign		$tmp861 ___321_ly 	%argrw{"wr"}
	gt		$tmp863 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp863 1585 1586 	%argrw{"r"}
	assign		$tmp861 ___321_hy 	%argrw{"wr"}
	assign		$tmp861 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp858 $tmp861 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp864 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp864 1592 1592 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp865 Roundness $tmp831 	%line{48} %argrw{"wrr"}
	if		$tmp865 1598 1619 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp867 Roundness $tmp831 	%line{49} %argrw{"wrr"}
	add		$tmp868 Roundness $tmp831 	%argrw{"wrr"}
	smoothstep	$tmp866 $tmp867 $tmp868 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp866 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp869 ___321_lox $tmp830 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp869 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp870 ___321_loy $tmp830 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp870 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp871 ___321_hix $tmp830 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp871 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp872 ___321_hiy $tmp830 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp872 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp873 $tmp831 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp873 $tmp831 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp875 $tmp831 	%line{59} %argrw{"wr"}
	neg		$tmp876 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp874 $tmp875 $tmp831 $tmp876 	%argrw{"wrrr"}
	mul		Bump Bump $tmp874 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp878 $tmp831 	%line{60} %argrw{"wr"}
	smoothstep	$tmp877 $tmp878 $tmp831 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp877 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp880 $tmp831 	%line{61} %argrw{"wr"}
	neg		$tmp881 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp879 $tmp880 $tmp831 $tmp881 	%argrw{"wrrr"}
	mul		Bump Bump $tmp879 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const3 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:217
# 					Tile = doRect(to2, 1.0, 1.0-to2, 1.0, 1, 2, Roundness, PARAM);
	eq		$tmp882 Tile $const1 	%line{217} %argrw{"wrr"}
	if		$tmp882 1728 1728 	%argrw{"r"}
# OSL\SimpleTiles.osl:218
# 				if (Tile == 0) 
	sub		$tmp883 $const6 to2 	%line{218} %argrw{"wrr"}
	assign		$tmp885 ___323_xx 	%argrw{"wr"}
	assign		$tmp886 ___324_yy 	%argrw{"wr"}
	point		$tmp884 $tmp885 $tmp886 $const2 	%argrw{"wrrr"}
	add		$tmp887 fluvw $tmp884 	%argrw{"wrr"}
	mul		$tmp888 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp889 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1728 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp890 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp891 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp890 $tmp891 	%argrw{"wrr"}
	compref		$tmp892 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp893 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp892 $tmp893 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp894 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox to2 $tmp894 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp895 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp895 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp896 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $tmp883 $tmp896 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp897 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp897 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp898 ___321_lox $tmp888 	%line{26} %argrw{"wrr"}
	lt		$tmp899 ___321_x $tmp898 	%argrw{"wrr"}
	neq		$tmp900 $tmp899 $const1 	%argrw{"wrr"}
	if		$tmp900 1650 1654 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp901 ___321_hix $tmp888 	%line{27} %argrw{"wrr"}
	gt		$tmp902 ___321_x $tmp901 	%argrw{"wrr"}
	neq		$tmp903 $tmp902 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp900 $tmp903 	%line{26} %argrw{"wr"}
	neq		$tmp904 $tmp900 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp904 1656 1660 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp905 ___321_loy $tmp888 	%line{28} %argrw{"wrr"}
	lt		$tmp906 ___321_y $tmp905 	%argrw{"wrr"}
	neq		$tmp907 $tmp906 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp904 $tmp907 	%line{27} %argrw{"wr"}
	neq		$tmp908 $tmp904 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp908 1662 1666 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp909 ___321_hiy $tmp888 	%line{29} %argrw{"wrr"}
	gt		$tmp910 ___321_y $tmp909 	%argrw{"wrr"}
	neq		$tmp911 $tmp910 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp908 $tmp911 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp908 1669 1669 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp888 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp912 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp912 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp913 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp913 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp914 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp914 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp915 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp915 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp917 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp917 1681 1685 	%argrw{"r"}
	assign		$tmp916 ___321_lx 	%argrw{"wr"}
	gt		$tmp918 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp918 1684 1685 	%argrw{"r"}
	assign		$tmp916 ___321_hx 	%argrw{"wr"}
	assign		$tmp916 $const2 	%argrw{"wr"}
	lt		$tmp920 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp920 1688 1692 	%argrw{"r"}
	assign		$tmp919 ___321_ly 	%argrw{"wr"}
	gt		$tmp921 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp921 1691 1692 	%argrw{"r"}
	assign		$tmp919 ___321_hy 	%argrw{"wr"}
	assign		$tmp919 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp916 $tmp919 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp922 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp922 1698 1698 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp923 Roundness $tmp889 	%line{48} %argrw{"wrr"}
	if		$tmp923 1704 1725 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp925 Roundness $tmp889 	%line{49} %argrw{"wrr"}
	add		$tmp926 Roundness $tmp889 	%argrw{"wrr"}
	smoothstep	$tmp924 $tmp925 $tmp926 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp924 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp927 ___321_lox $tmp888 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp927 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp928 ___321_loy $tmp888 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp928 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp929 ___321_hix $tmp888 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp929 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp930 ___321_hiy $tmp888 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp930 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp931 $tmp889 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp931 $tmp889 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp933 $tmp889 	%line{59} %argrw{"wr"}
	neg		$tmp934 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp932 $tmp933 $tmp889 $tmp934 	%argrw{"wrrr"}
	mul		Bump Bump $tmp932 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp936 $tmp889 	%line{60} %argrw{"wr"}
	smoothstep	$tmp935 $tmp936 $tmp889 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp935 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp938 $tmp889 	%line{61} %argrw{"wr"}
	neg		$tmp939 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp937 $tmp938 $tmp889 $tmp939 	%argrw{"wrrr"}
	mul		Bump Bump $tmp937 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const10 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const3 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:219
# 					Tile = doRect(0.0, to2, to2, 1.0, 2, 3, Roundness, PARAM);
	eq		$tmp940 Tile $const1 	%line{219} %argrw{"wrr"}
	if		$tmp940 1833 1833 	%argrw{"r"}
# OSL\SimpleTiles.osl:220
# 				if (Tile == 0) 
	assign		$tmp942 ___323_xx 	%line{220} %argrw{"wr"}
	assign		$tmp943 ___324_yy 	%argrw{"wr"}
	point		$tmp941 $tmp942 $tmp943 $const2 	%argrw{"wrrr"}
	add		$tmp944 fluvw $tmp941 	%argrw{"wrr"}
	mul		$tmp945 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp946 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1833 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp947 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp948 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp947 $tmp948 	%argrw{"wrr"}
	compref		$tmp949 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp950 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp949 $tmp950 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp951 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $const2 $tmp951 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp952 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix to2 $tmp952 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp953 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy to2 $tmp953 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp954 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $const6 $tmp954 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp955 ___321_lox $tmp945 	%line{26} %argrw{"wrr"}
	lt		$tmp956 ___321_x $tmp955 	%argrw{"wrr"}
	neq		$tmp957 $tmp956 $const1 	%argrw{"wrr"}
	if		$tmp957 1755 1759 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp958 ___321_hix $tmp945 	%line{27} %argrw{"wrr"}
	gt		$tmp959 ___321_x $tmp958 	%argrw{"wrr"}
	neq		$tmp960 $tmp959 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp957 $tmp960 	%line{26} %argrw{"wr"}
	neq		$tmp961 $tmp957 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp961 1761 1765 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp962 ___321_loy $tmp945 	%line{28} %argrw{"wrr"}
	lt		$tmp963 ___321_y $tmp962 	%argrw{"wrr"}
	neq		$tmp964 $tmp963 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp961 $tmp964 	%line{27} %argrw{"wr"}
	neq		$tmp965 $tmp961 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp965 1767 1771 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp966 ___321_hiy $tmp945 	%line{29} %argrw{"wrr"}
	gt		$tmp967 ___321_y $tmp966 	%argrw{"wrr"}
	neq		$tmp968 $tmp967 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp965 $tmp968 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp965 1774 1774 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp945 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp969 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp969 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp970 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp970 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp971 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp971 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp972 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp972 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp974 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp974 1786 1790 	%argrw{"r"}
	assign		$tmp973 ___321_lx 	%argrw{"wr"}
	gt		$tmp975 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp975 1789 1790 	%argrw{"r"}
	assign		$tmp973 ___321_hx 	%argrw{"wr"}
	assign		$tmp973 $const2 	%argrw{"wr"}
	lt		$tmp977 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp977 1793 1797 	%argrw{"r"}
	assign		$tmp976 ___321_ly 	%argrw{"wr"}
	gt		$tmp978 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp978 1796 1797 	%argrw{"r"}
	assign		$tmp976 ___321_hy 	%argrw{"wr"}
	assign		$tmp976 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp973 $tmp976 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp979 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp979 1803 1803 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp980 Roundness $tmp946 	%line{48} %argrw{"wrr"}
	if		$tmp980 1809 1830 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp982 Roundness $tmp946 	%line{49} %argrw{"wrr"}
	add		$tmp983 Roundness $tmp946 	%argrw{"wrr"}
	smoothstep	$tmp981 $tmp982 $tmp983 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp981 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp984 ___321_lox $tmp945 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp984 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp985 ___321_loy $tmp945 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp985 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp986 ___321_hix $tmp945 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp986 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp987 ___321_hiy $tmp945 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp987 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp988 $tmp946 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp988 $tmp946 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp990 $tmp946 	%line{59} %argrw{"wr"}
	neg		$tmp991 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp989 $tmp990 $tmp946 $tmp991 	%argrw{"wrrr"}
	mul		Bump Bump $tmp989 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp993 $tmp946 	%line{60} %argrw{"wr"}
	smoothstep	$tmp992 $tmp993 $tmp946 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp992 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp995 $tmp946 	%line{61} %argrw{"wr"}
	neg		$tmp996 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp994 $tmp995 $tmp946 $tmp996 	%argrw{"wrrr"}
	mul		Bump Bump $tmp994 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const11 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:221
# 					Tile = doRect(1.0-to2, 1.0, 0.0, 1.0-to2, 2, 4, Roundness, PARAM);
	eq		$tmp997 Tile $const1 	%line{221} %argrw{"wrr"}
	if		$tmp997 1940 1940 	%argrw{"r"}
# OSL\SimpleTiles.osl:222
# 				if (Tile == 0) 
	sub		$tmp998 $const6 to2 	%line{222} %argrw{"wrr"}
	sub		$tmp999 $const6 to2 	%argrw{"wrr"}
	assign		$tmp1001 ___323_xx 	%argrw{"wr"}
	assign		$tmp1002 ___324_yy 	%argrw{"wr"}
	point		$tmp1000 $tmp1001 $tmp1002 $const2 	%argrw{"wrrr"}
	add		$tmp1003 fluvw $tmp1000 	%argrw{"wrr"}
	mul		$tmp1004 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp1005 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 1940 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp1006 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp1007 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp1006 $tmp1007 	%argrw{"wrr"}
	compref		$tmp1008 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp1009 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp1008 $tmp1009 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp1010 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox $tmp998 $tmp1010 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp1011 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $const6 $tmp1011 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp1012 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy $const2 $tmp1012 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp1013 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $tmp999 $tmp1013 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp1014 ___321_lox $tmp1004 	%line{26} %argrw{"wrr"}
	lt		$tmp1015 ___321_x $tmp1014 	%argrw{"wrr"}
	neq		$tmp1016 $tmp1015 $const1 	%argrw{"wrr"}
	if		$tmp1016 1862 1866 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp1017 ___321_hix $tmp1004 	%line{27} %argrw{"wrr"}
	gt		$tmp1018 ___321_x $tmp1017 	%argrw{"wrr"}
	neq		$tmp1019 $tmp1018 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp1016 $tmp1019 	%line{26} %argrw{"wr"}
	neq		$tmp1020 $tmp1016 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp1020 1868 1872 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp1021 ___321_loy $tmp1004 	%line{28} %argrw{"wrr"}
	lt		$tmp1022 ___321_y $tmp1021 	%argrw{"wrr"}
	neq		$tmp1023 $tmp1022 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp1020 $tmp1023 	%line{27} %argrw{"wr"}
	neq		$tmp1024 $tmp1020 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp1024 1874 1878 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp1025 ___321_hiy $tmp1004 	%line{29} %argrw{"wrr"}
	gt		$tmp1026 ___321_y $tmp1025 	%argrw{"wrr"}
	neq		$tmp1027 $tmp1026 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp1024 $tmp1027 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp1024 1881 1881 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp1004 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp1028 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp1028 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp1029 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp1029 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp1030 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp1030 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp1031 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp1031 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp1033 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp1033 1893 1897 	%argrw{"r"}
	assign		$tmp1032 ___321_lx 	%argrw{"wr"}
	gt		$tmp1034 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp1034 1896 1897 	%argrw{"r"}
	assign		$tmp1032 ___321_hx 	%argrw{"wr"}
	assign		$tmp1032 $const2 	%argrw{"wr"}
	lt		$tmp1036 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp1036 1900 1904 	%argrw{"r"}
	assign		$tmp1035 ___321_ly 	%argrw{"wr"}
	gt		$tmp1037 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp1037 1903 1904 	%argrw{"r"}
	assign		$tmp1035 ___321_hy 	%argrw{"wr"}
	assign		$tmp1035 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp1032 $tmp1035 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp1038 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp1038 1910 1910 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp1039 Roundness $tmp1005 	%line{48} %argrw{"wrr"}
	if		$tmp1039 1916 1937 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp1041 Roundness $tmp1005 	%line{49} %argrw{"wrr"}
	add		$tmp1042 Roundness $tmp1005 	%argrw{"wrr"}
	smoothstep	$tmp1040 $tmp1041 $tmp1042 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp1040 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp1043 ___321_lox $tmp1004 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp1043 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp1044 ___321_loy $tmp1004 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp1044 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp1045 ___321_hix $tmp1004 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp1045 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp1046 ___321_hiy $tmp1004 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp1046 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp1047 $tmp1005 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp1047 $tmp1005 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp1049 $tmp1005 	%line{59} %argrw{"wr"}
	neg		$tmp1050 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp1048 $tmp1049 $tmp1005 $tmp1050 	%argrw{"wrrr"}
	mul		Bump Bump $tmp1048 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp1052 $tmp1005 	%line{60} %argrw{"wr"}
	smoothstep	$tmp1051 $tmp1052 $tmp1005 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp1051 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp1054 $tmp1005 	%line{61} %argrw{"wr"}
	neg		$tmp1055 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp1053 $tmp1054 $tmp1005 $tmp1055 	%argrw{"wrrr"}
	mul		Bump Bump $tmp1053 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const12 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const10 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:223
# 					Tile = doRect(to2, 1.0-to2, to2, 1.0-to2, 3, 5, Roundness, PARAM);
	eq		$tmp1056 Tile $const1 	%line{223} %argrw{"wrr"}
	if		$tmp1056 2047 2047 	%argrw{"r"}
# OSL\SimpleTiles.osl:224
# 			}
	sub		$tmp1057 $const6 to2 	%line{224} %argrw{"wrr"}
	sub		$tmp1058 $const6 to2 	%argrw{"wrr"}
	assign		$tmp1060 ___323_xx 	%argrw{"wr"}
	assign		$tmp1061 ___324_yy 	%argrw{"wr"}
	point		$tmp1059 $tmp1060 $tmp1061 $const2 	%argrw{"wrrr"}
	add		$tmp1062 fluvw $tmp1059 	%argrw{"wrr"}
	mul		$tmp1063 GapWidth $const7 	%argrw{"wrr"}
	mul		$tmp1064 Edge $const8 	%argrw{"wrr"}
	functioncall	$const9 2047 	%argrw{"r"}
# OSL\SimpleTiles.osl:17
# 	
	compref		$tmp1065 ___325_lookup $const1 	%line{17} %argrw{"wrr"}
	compref		$tmp1066 Tiling $const1 	%argrw{"wrr"}
	div		___321_x $tmp1065 $tmp1066 	%argrw{"wrr"}
	compref		$tmp1067 ___325_lookup $const3 	%argrw{"wrr"}
	compref		$tmp1068 Tiling $const3 	%argrw{"wrr"}
	div		___321_y $tmp1067 $tmp1068 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:19
# 	float hix = hiX / Tiling[0];	
	compref		$tmp1069 Tiling $const1 	%line{19} %argrw{"wrr"}
	div		___321_lox to2 $tmp1069 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:20
# 	float loy = loY / Tiling[1];
	compref		$tmp1070 Tiling $const1 	%line{20} %argrw{"wrr"}
	div		___321_hix $tmp1057 $tmp1070 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:21
# 	float hiy = hiY / Tiling[1];	
	compref		$tmp1071 Tiling $const3 	%line{21} %argrw{"wrr"}
	div		___321_loy to2 $tmp1071 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:22
# 	
	compref		$tmp1072 Tiling $const3 	%line{22} %argrw{"wrr"}
	div		___321_hiy $tmp1058 $tmp1072 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	add		$tmp1073 ___321_lox $tmp1063 	%line{26} %argrw{"wrr"}
	lt		$tmp1074 ___321_x $tmp1073 	%argrw{"wrr"}
	neq		$tmp1075 $tmp1074 $const1 	%argrw{"wrr"}
	if		$tmp1075 1969 1973 	%argrw{"r"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	sub		$tmp1076 ___321_hix $tmp1063 	%line{27} %argrw{"wrr"}
	gt		$tmp1077 ___321_x $tmp1076 	%argrw{"wrr"}
	neq		$tmp1078 $tmp1077 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	assign		$tmp1075 $tmp1078 	%line{26} %argrw{"wr"}
	neq		$tmp1079 $tmp1075 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	if		$tmp1079 1975 1979 	%line{27} %argrw{"r"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	add		$tmp1080 ___321_loy $tmp1063 	%line{28} %argrw{"wrr"}
	lt		$tmp1081 ___321_y $tmp1080 	%argrw{"wrr"}
	neq		$tmp1082 $tmp1081 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:27
# 	    y < loy + GapWidth ||
	assign		$tmp1079 $tmp1082 	%line{27} %argrw{"wr"}
	neq		$tmp1083 $tmp1079 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	if		$tmp1083 1981 1985 	%line{28} %argrw{"r"}
# OSL\SimpleTiles.osl:29
# 	    return 0;
	sub		$tmp1084 ___321_hiy $tmp1063 	%line{29} %argrw{"wrr"}
	gt		$tmp1085 ___321_y $tmp1084 	%argrw{"wrr"}
	neq		$tmp1086 $tmp1085 $const1 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:28
# 	    y > hiy - GapWidth)
	assign		$tmp1083 $tmp1086 	%line{28} %argrw{"wr"}
# OSL\SimpleTiles.osl:26
# 	    x > hix - GapWidth || 
	if		$tmp1083 1988 1988 	%line{26} %argrw{"r"}
# OSL\SimpleTiles.osl:30
# 	        
	assign		Tile $const1 	%line{30} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:33
# 
	add		___321_gwr $tmp1063 Roundness 	%line{33} %argrw{"wrr"}
# OSL\SimpleTiles.osl:35
# 	float ly = y - (loy + gwr);
	add		$tmp1087 ___321_lox ___321_gwr 	%line{35} %argrw{"wrr"}
	sub		___321_lx ___321_x $tmp1087 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:36
# 	float hx = x - (hix - gwr);
	add		$tmp1088 ___321_loy ___321_gwr 	%line{36} %argrw{"wrr"}
	sub		___321_ly ___321_y $tmp1088 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:37
# 	float hy = y - (hiy - gwr);
	sub		$tmp1089 ___321_hix ___321_gwr 	%line{37} %argrw{"wrr"}
	sub		___321_hx ___321_x $tmp1089 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:38
# 
	sub		$tmp1090 ___321_hiy ___321_gwr 	%line{38} %argrw{"wrr"}
	sub		___321_hy ___321_y $tmp1090 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:42
# 	float  d = length(dp);	
	lt		$tmp1092 ___321_lx $const1 	%line{42} %argrw{"wrr"}
	if		$tmp1092 2000 2004 	%argrw{"r"}
	assign		$tmp1091 ___321_lx 	%argrw{"wr"}
	gt		$tmp1093 ___321_hx $const1 	%argrw{"wrr"}
	if		$tmp1093 2003 2004 	%argrw{"r"}
	assign		$tmp1091 ___321_hx 	%argrw{"wr"}
	assign		$tmp1091 $const2 	%argrw{"wr"}
	lt		$tmp1095 ___321_ly $const1 	%argrw{"wrr"}
	if		$tmp1095 2007 2011 	%argrw{"r"}
	assign		$tmp1094 ___321_ly 	%argrw{"wr"}
	gt		$tmp1096 ___321_hy $const2 	%argrw{"wrr"}
	if		$tmp1096 2010 2011 	%argrw{"r"}
	assign		$tmp1094 ___321_hy 	%argrw{"wr"}
	assign		$tmp1094 $const2 	%argrw{"wr"}
	vector		___321_dp $tmp1091 $tmp1094 $const2 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:43
# 	// Outside the radius - we missed
	length		___321_d ___321_dp 	%line{43} %argrw{"wr"}
# OSL\SimpleTiles.osl:45
# 
	gt		$tmp1097 ___321_d Roundness 	%line{45} %argrw{"wrr"}
	if		$tmp1097 2017 2017 	%argrw{"r"}
	assign		Tile $const1 	%argrw{"wr"}
	return
# OSL\SimpleTiles.osl:48
# 		Bump = 1.0 - smoothstep(Radius-Edge, Radius+Edge, d);
	gt		$tmp1098 Roundness $tmp1064 	%line{48} %argrw{"wrr"}
	if		$tmp1098 2023 2044 	%argrw{"r"}
# OSL\SimpleTiles.osl:49
# 	else
	sub		$tmp1100 Roundness $tmp1064 	%line{49} %argrw{"wrr"}
	add		$tmp1101 Roundness $tmp1064 	%argrw{"wrr"}
	smoothstep	$tmp1099 $tmp1100 $tmp1101 ___321_d 	%argrw{"wrrr"}
	sub		Bump $const6 $tmp1099 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:54
# 		float ly = y - (loy + GapWidth);
	add		$tmp1102 ___321_lox $tmp1063 	%line{54} %argrw{"wrr"}
	sub		___322_lx ___321_x $tmp1102 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:55
# 		float hx = x - (hix - GapWidth);
	add		$tmp1103 ___321_loy $tmp1063 	%line{55} %argrw{"wrr"}
	sub		___322_ly ___321_y $tmp1103 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:56
# 		float hy = y - (hiy - GapWidth);		
	sub		$tmp1104 ___321_hix $tmp1063 	%line{56} %argrw{"wrr"}
	sub		___322_hx ___321_x $tmp1104 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:57
# 		Bump  = smoothstep(-Edge, Edge,  lx);
	sub		$tmp1105 ___321_hiy $tmp1063 	%line{57} %argrw{"wrr"}
	sub		___322_hy ___321_y $tmp1105 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:58
# 		Bump *= smoothstep(-Edge, Edge, -hx);
	neg		$tmp1106 $tmp1064 	%line{58} %argrw{"wr"}
	smoothstep	Bump $tmp1106 $tmp1064 ___322_lx 	%argrw{"wrrr"}
# OSL\SimpleTiles.osl:59
# 		Bump *= smoothstep(-Edge, Edge,  ly);
	neg		$tmp1108 $tmp1064 	%line{59} %argrw{"wr"}
	neg		$tmp1109 ___322_hx 	%argrw{"wr"}
	smoothstep	$tmp1107 $tmp1108 $tmp1064 $tmp1109 	%argrw{"wrrr"}
	mul		Bump Bump $tmp1107 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:60
# 		Bump *= smoothstep(-Edge, Edge, -hy);
	neg		$tmp1111 $tmp1064 	%line{60} %argrw{"wr"}
	smoothstep	$tmp1110 $tmp1111 $tmp1064 ___322_ly 	%argrw{"wrrr"}
	mul		Bump Bump $tmp1110 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:61
# 	}
	neg		$tmp1113 $tmp1064 	%line{61} %argrw{"wr"}
	neg		$tmp1114 ___322_hy 	%argrw{"wr"}
	smoothstep	$tmp1112 $tmp1113 $tmp1064 $tmp1114 	%argrw{"wrrr"}
	mul		Bump Bump $tmp1112 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:65
# 	// Return the tile ID we are in	
	assign		___325_HitIdx $const14 	%line{65} %argrw{"wr"}
# OSL\SimpleTiles.osl:67
# }
	assign		Tile $const11 	%line{67} %argrw{"wr"}
	return
# OSL\SimpleTiles.osl:226
# 			{
	gt		$tmp1115 ___325_HitIdx $const1 	%line{226} %argrw{"wrr"}
	if		$tmp1115 2058 2058 	%argrw{"r"}
# OSL\SimpleTiles.osl:228
# 				Index = HitIdx + int((float)cellnoise(fluvw+point(xx,yy,0)) * 1024.0);
	assign		TileIdx ___325_HitIdx 	%line{228} %argrw{"wr"}
# OSL\SimpleTiles.osl:229
# 			}
	assign		$tmp1119 ___323_xx 	%line{229} %argrw{"wr"}
	assign		$tmp1120 ___324_yy 	%argrw{"wr"}
	point		$tmp1118 $tmp1119 $tmp1120 $const2 	%argrw{"wrrr"}
	add		$tmp1121 fluvw $tmp1118 	%argrw{"wrr"}
	cellnoise	$tmp1117 $tmp1121 	%argrw{"wr"}
	mul		$tmp1122 $tmp1117 $const15 	%argrw{"wrr"}
	assign		$tmp1116 $tmp1122 	%argrw{"wr"}
	add		Index ___325_HitIdx $tmp1116 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:164
# 		{
	assign		$tmp1123 ___324_yy 	%line{164} %argrw{"wr"}
	add		___324_yy ___324_yy $const3 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:163
# 		for (int yy = -Overlap; yy <= Overlap; yy++)
	assign		$tmp1124 ___323_xx 	%line{163} %argrw{"wr"}
	add		___323_xx ___323_xx $const3 	%argrw{"wrr"}
# OSL\SimpleTiles.osl:233
# 	if (Tile == 2) Col = TileColor2;
	eq		$tmp1125 Tile $const3 	%line{233} %argrw{"wrr"}
	if		$tmp1125 2065 2065 	%argrw{"r"}
	assign		Col TileColor1 	%argrw{"wr"}
# OSL\SimpleTiles.osl:234
# 	if (Tile == 3) Col = TileColor3;
	eq		$tmp1126 Tile $const10 	%line{234} %argrw{"wrr"}
	if		$tmp1126 2068 2068 	%argrw{"r"}
	assign		Col TileColor2 	%argrw{"wr"}
# OSL\SimpleTiles.osl:235
# 	
	eq		$tmp1127 Tile $const11 	%line{235} %argrw{"wrr"}
	if		$tmp1127 2071 2071 	%argrw{"r"}
	assign		Col TileColor3 	%argrw{"wr"}
# OSL\SimpleTiles.osl:237
# 	Bump += dot(0.3333, Col) * ColorBump;
	mul		Bump Bump EdgeBump 	%line{237} %argrw{"wrr"}
# OSL\SimpleTiles.osl:238
# }
	assign		$tmp1129 $const16 	%line{238} %argrw{"wr"}
	dot		$tmp1128 $tmp1129 Col 	%argrw{"wrr"}
	mul		$tmp1130 $tmp1128 ColorBump 	%argrw{"wrr"}
	add		Bump Bump $tmp1130 	%argrw{"wrr"}
	end
