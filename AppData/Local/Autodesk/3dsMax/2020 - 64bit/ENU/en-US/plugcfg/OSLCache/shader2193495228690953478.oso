OpenShadingLanguage 1.00
# Compiled by oslc 1.10.2
# options: -IC:/Program Files/Autodesk/3ds Max 2020/OSL/
shader ToonWidth	%meta{string,help,"Toon Edge Width based on how close the surface normal (when converted to screen space) is to the given direction."} %meta{string,label,"Toon Width"} %meta{string,URL,"http://RenderingTips.com"} 
param	vector	ThickDirection	-0.60000002 -0.60000002 0		%meta{string,label,"Thick Direction"} %meta{string,help,"The closer the Normal - converted to screen space - is to this vector, the thicker the contour"}  %read{2,2} %write{2147483647,-1}
param	float	Base	0.5		%meta{string,help,"The base width"}  %read{4,4} %write{2147483647,-1}
param	float	Amt	0.40000001		%meta{string,help,"How much the width varies depends on the closeness to the above screen space normal direction"}  %read{3,3} %write{2147483647,-1}
oparam	float	Out	0		%read{2147483647,-1} %write{4,4}
global	normal	N	%read{1,1} %write{2147483647,-1}
local	vector	camN	%read{2,2} %write{1,1}
const	string	$const1	"camera"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2}
temp	float	$tmp2	%read{4,4} %write{3,3}
code ___main___
# OSL\ToonWidth.osl:22
# 	Out = Base + Amt * dot(ThickDirection, camN);
	functioncall	$const2 2 	%filename{"OSL\ToonWidth.osl"} %line{22} %argrw{"r"}
# C:/Program Files\Autodesk\3ds Max 2020\OSL\stdosl.h:283
# normal transform (string to, normal p) { return transform("common",to,p); }
	transformn	camN $const3 $const1 N 	%filename{"C:/Program Files\Autodesk\3ds Max 2020\OSL\stdosl.h"} %line{283} %argrw{"wrrr"}
# OSL\ToonWidth.osl:23
# }
	dot		$tmp1 ThickDirection camN 	%filename{"OSL\ToonWidth.osl"} %line{23} %argrw{"wrr"}
	mul		$tmp2 Amt $tmp1 	%argrw{"wrr"}
	add		Out Base $tmp2 	%argrw{"wrr"}
	end
