OpenShadingLanguage 1.00
# Compiled by oslc 1.10.2
# options: -IC:/Program Files/Autodesk/3ds Max 2020/OSL/
shader Waveform	%meta{string,help,"Various animated Waveforms. The output Wave is the raw value of the waveform, and Col an interpolation between the two colors."} %meta{string,label,"Waveform (animated)"} 
param	int	WaveShape	0		%meta{string,widget,"mapper"} %meta{string,options,"sin (signed):0|sin (unsigned):1|square:2|saw up:3|saw down:4|triangle:5|blinkenlights:6"} %meta{string,label,"Waveform:"}  %read{8,43} %write{2147483647,-1}
param	float	MidPoint	0.5		%meta{string,help,"Adjusts the shape of the wave. Does different adjustments depending on waveform"} %meta{float,min,0} %meta{float,max,1}  %read{5,47} %write{2147483647,-1}
param	float	Amplitude	1		%meta{string,help,"The Amplitude of the Flt output"}  %read{52,52} %write{2147483647,-1}
param	color	High	1 0 0		%meta{string,help,"Color on the Col output when the Wave output is at 1.0"} %meta{string,label,"High Color"}  %read{51,51} %write{2147483647,-1}
param	color	Low	0 0 0		%meta{string,help,"Color on the Col output when the Wave output is at 0.0"} %meta{string,label,"Low Color"}  %read{51,51} %write{2147483647,-1}
param	int	FrameNumber	0		%meta{string,label,"Frame Number"} %meta{int,timeValue,1}  %read{0,0} %write{2147483647,-1}
param	float	Period	60		%meta{string,label,"Period (Frames)"}  %read{2,2} %write{2147483647,-1}
param	float	Phase	0		%meta{string,label,"Phase (Frames)"}  %read{1,1} %write{2147483647,-1}
oparam	color	Col	0 0 0		%read{2147483647,-1} %write{51,51}
oparam	float	Wave	0		%read{51,52} %write{12,52}
local	float	wavePos	%read{3,45} %write{2,2}
local	float	wavePosF	%read{22,39} %write{4,4}
local	float	power	%read{12,32} %write{7,7}
temp	float	$tmp1	%read{2,2} %write{1,1}
temp	float	$tmp2	%read{1,1} %write{0,0}
temp	float	$tmp3	%read{4,4} %write{3,3}
const	float	$const1	10		%read{7,7} %write{2147483647,-1}
const	float	$const2	0.5		%read{5,18} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{5,5}
const	float	$const3	2		%read{6,6} %write{2147483647,-1}
temp	float	$tmp5	%read{7,7} %write{6,6}
const	int	$const4	0		%read{8,8} %write{2147483647,-1}
temp	int	$tmp6	%read{9,9} %write{8,8}
temp	float	$tmp7	%read{12,12} %write{11,11}
const	float	$const5	6.2831855		%read{10,15} %write{2147483647,-1}
temp	float	$tmp8	%read{11,11} %write{10,10}
const	int	$const6	1		%read{13,13} %write{2147483647,-1}
temp	int	$tmp9	%read{14,14} %write{13,13}
temp	float	$tmp10	%read{17,17} %write{16,16}
temp	float	$tmp11	%read{16,16} %write{15,15}
temp	float	$tmp12	%read{18,18} %write{17,17}
temp	float	$tmp13	%read{19,19} %write{18,18}
const	int	$const7	2		%read{20,20} %write{2147483647,-1}
temp	int	$tmp14	%read{21,21} %write{20,20}
temp	int	$tmp15	%read{23,23} %write{22,22}
const	float	$const8	1		%read{24,49} %write{2147483647,-1}
const	float	$const9	0		%read{25,50} %write{2147483647,-1}
const	int	$const10	3		%read{26,26} %write{2147483647,-1}
temp	int	$tmp16	%read{27,27} %write{26,26}
const	int	$const11	4		%read{29,29} %write{2147483647,-1}
temp	int	$tmp17	%read{30,30} %write{29,29}
temp	float	$tmp18	%read{32,32} %write{31,31}
const	int	$const12	5		%read{33,33} %write{2147483647,-1}
temp	int	$tmp19	%read{34,34} %write{33,33}
temp	int	$tmp20	%read{36,36} %write{35,35}
const	float	$const13	0.001		%read{37,41} %write{2147483647,-1}
temp	float	$tmp21	%read{38,38} %write{37,37}
temp	float	$tmp22	%read{42,42} %write{39,39}
temp	float	$tmp23	%read{41,41} %write{40,40}
temp	float	$tmp24	%read{42,42} %write{41,41}
const	int	$const14	6		%read{43,43} %write{2147483647,-1}
temp	int	$tmp25	%read{44,44} %write{43,43}
temp	float	$tmp26	%read{47,47} %write{46,46}
temp	float	$tmp27	%read{46,46} %write{45,45}
temp	int	$tmp28	%read{48,48} %write{47,47}
code ___main___
# OSL\Waveform.osl:35
# 	float wavePosF = wavePos - floor(wavePos);
	assign		$tmp2 FrameNumber 	%filename{"OSL\Waveform.osl"} %line{35} %argrw{"wr"}
	sub		$tmp1 $tmp2 Phase 	%argrw{"wrr"}
	div		wavePos $tmp1 Period 	%argrw{"wrr"}
# OSL\Waveform.osl:36
# 	float power    = pow(10.0, (MidPoint - 0.5) * 2.0);
	floor		$tmp3 wavePos 	%line{36} %argrw{"wr"}
	sub		wavePosF wavePos $tmp3 	%argrw{"wrr"}
# OSL\Waveform.osl:37
# 	
	sub		$tmp4 MidPoint $const2 	%line{37} %argrw{"wrr"}
	mul		$tmp5 $tmp4 $const3 	%argrw{"wrr"}
	pow		power $const1 $tmp5 	%argrw{"wrr"}
# OSL\Waveform.osl:39
# 		Wave = pow(sin(wavePos * M_2PI), power);
	eq		$tmp6 WaveShape $const4 	%line{39} %argrw{"wrr"}
	if		$tmp6 13 51 	%argrw{"r"}
# OSL\Waveform.osl:40
# 	else if (WaveShape == 1 )	
	mul		$tmp8 wavePos $const5 	%line{40} %argrw{"wrr"}
	sin		$tmp7 $tmp8 	%argrw{"wr"}
	pow		Wave $tmp7 power 	%argrw{"wrr"}
# OSL\Waveform.osl:41
# 		Wave = (pow(sin(wavePos * M_2PI) * 0.5 + 0.5, power));
	eq		$tmp9 WaveShape $const6 	%line{41} %argrw{"wrr"}
	if		$tmp9 20 51 	%argrw{"r"}
# OSL\Waveform.osl:42
# 	else if (WaveShape == 2 )	
	mul		$tmp11 wavePos $const5 	%line{42} %argrw{"wrr"}
	sin		$tmp10 $tmp11 	%argrw{"wr"}
	mul		$tmp12 $tmp10 $const2 	%argrw{"wrr"}
	add		$tmp13 $tmp12 $const2 	%argrw{"wrr"}
	pow		Wave $tmp13 power 	%argrw{"wrr"}
# OSL\Waveform.osl:43
# 		Wave = wavePosF < MidPoint ? 1.0 : 0.0;
	eq		$tmp14 WaveShape $const7 	%line{43} %argrw{"wrr"}
	if		$tmp14 26 51 	%argrw{"r"}
# OSL\Waveform.osl:44
# 	else if (WaveShape == 3 )	
	lt		$tmp15 wavePosF MidPoint 	%line{44} %argrw{"wrr"}
	if		$tmp15 25 26 	%argrw{"r"}
	assign		Wave $const8 	%argrw{"wr"}
	assign		Wave $const9 	%argrw{"wr"}
# OSL\Waveform.osl:45
# 		Wave = pow(wavePosF, power);
	eq		$tmp16 WaveShape $const10 	%line{45} %argrw{"wrr"}
	if		$tmp16 29 51 	%argrw{"r"}
# OSL\Waveform.osl:46
# 	else if (WaveShape == 4 )	
	pow		Wave wavePosF power 	%line{46} %argrw{"wrr"}
# OSL\Waveform.osl:47
# 		Wave = pow(1.0 - wavePosF, power);
	eq		$tmp17 WaveShape $const11 	%line{47} %argrw{"wrr"}
	if		$tmp17 33 51 	%argrw{"r"}
# OSL\Waveform.osl:48
# 	else if (WaveShape == 5 )	
	sub		$tmp18 $const8 wavePosF 	%line{48} %argrw{"wrr"}
	pow		Wave $tmp18 power 	%argrw{"wrr"}
# OSL\Waveform.osl:49
# 		Wave = wavePosF < MidPoint ? wavePosF / (MidPoint+0.001) : (1.0 - wavePosF) / (1.0 - MidPoint + 0.001);
	eq		$tmp19 WaveShape $const12 	%line{49} %argrw{"wrr"}
	if		$tmp19 43 51 	%argrw{"r"}
# OSL\Waveform.osl:50
# 	else if (WaveShape == 6 )	
	lt		$tmp20 wavePosF MidPoint 	%line{50} %argrw{"wrr"}
	if		$tmp20 39 43 	%argrw{"r"}
	add		$tmp21 MidPoint $const13 	%argrw{"wrr"}
	div		Wave wavePosF $tmp21 	%argrw{"wrr"}
	sub		$tmp22 $const8 wavePosF 	%argrw{"wrr"}
	sub		$tmp23 $const8 MidPoint 	%argrw{"wrr"}
	add		$tmp24 $tmp23 $const13 	%argrw{"wrr"}
	div		Wave $tmp22 $tmp24 	%argrw{"wrr"}
# OSL\Waveform.osl:51
# 		Wave = (float)cellnoise(wavePos * 1.0) < MidPoint ? 1.0 : 0.0;
	eq		$tmp25 WaveShape $const14 	%line{51} %argrw{"wrr"}
	if		$tmp25 51 51 	%argrw{"r"}
# OSL\Waveform.osl:52
# 		
	mul		$tmp27 wavePos $const8 	%line{52} %argrw{"wrr"}
	cellnoise	$tmp26 $tmp27 	%argrw{"wr"}
	lt		$tmp28 $tmp26 MidPoint 	%argrw{"wrr"}
	if		$tmp28 50 51 	%argrw{"r"}
	assign		Wave $const8 	%argrw{"wr"}
	assign		Wave $const9 	%argrw{"wr"}
# OSL\Waveform.osl:54
# 	Wave *= Amplitude;
	mix		Col Low High Wave 	%line{54} %argrw{"wrrr"}
# OSL\Waveform.osl:55
# }
	mul		Wave Wave Amplitude 	%line{55} %argrw{"wrr"}
	end
